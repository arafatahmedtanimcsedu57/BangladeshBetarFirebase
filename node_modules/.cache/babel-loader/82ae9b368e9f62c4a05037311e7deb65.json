{"ast":null,"code":"import _defineProperty from \"/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/src/components/Proructs.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, createRef } from 'react';\nimport { base } from '../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable';\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createProduct = event => {\n      event.preventDefault();\n      this.addProduct(this.productManufacturerRef.current.value, this.productModelRef.current.value, this.productNameRef.current.value, this.productSrNoRef.current.value, this.productSymbolNoRef.current.value, this.productTypeRef.current.value);\n      event.currentTarget.reset();\n    };\n\n    this.addProduct = (id, manufacturer, model, name, srNo, symbolNo, type) => {\n      const products = _objectSpread({}, this.state.products);\n\n      manufactures[\"\".concat(id)] = {\n        Manufacture: manufacturer,\n        Model: model,\n        Name: name,\n        SrNo: srNo,\n        SymbolNo: symbolNo,\n        Type: type\n      };\n      this.setState({\n        products\n      });\n    };\n\n    this.deleteProduct = id => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)] = null;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductManufacturer = (id, manufacturer) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Manufacturer = manufacturer;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductModel = (id, model) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Model = model;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductName = (id, name) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Name = name;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductSrNo = (id, srNo) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].SrNo = srNo;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductSymbolNo = (id, symbolNo) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].SymbolNo = symbolNo;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductType = (id, type) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Type = type;\n      this.setState({\n        products\n      });\n    };\n\n    this.createProductFormShow = () => this.setState({\n      createProductFormVisible: !this.state.createProductFormVisible\n    });\n\n    this.state = {\n      products: null,\n      createProductFormVisible: false\n    };\n    this.productManufacturerRef = createRef();\n    this.productModelRef = createRef();\n    this.productNameRef = createRef();\n    this.productSrNoRef = createRef();\n    this.productSymbolNoRef = createRef();\n    this.productTypeRef = createRef();\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"manufactures\", {\n      context: this,\n      state: \"manufactures\"\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.state.products ? React.createElement(\"div\", {\n      id: \"products\",\n      style: {\n        width: '100%',\n        padding: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        margin: '2px'\n      },\n      title: React.createElement(\"span\", {\n        style: {\n          color: 'rgb(0, 75, 222)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Products\"),\n      extra: React.createElement(Icon, {\n        style: {\n          color: 'green'\n        },\n        type: \"edit\",\n        key: \"edit\",\n        onClick: this.createProductFormShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'center'\n      },\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      className: \"table table-responsive table-borderless\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, Object.keys(this.state.products).length > 0 ? React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Manufacturer\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Model\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"SrNo\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"SymbolNo\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Type\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Action\"))) : '', React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, Object.keys(this.state.products).map(key => React.createElement(\"tr\", {\n      key: key,\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Manufacturer,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductManufacturer(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Model,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductModel(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Name,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductName(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].SrNo,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductSrNo(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].SymbolNo,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductSymbolNo(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Type,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductType(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        color: 'red'\n      },\n      type: \"delete\",\n      key: \"delete\",\n      onClick: () => this.deleteManufacture(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, this.state.createProductFormVisible === true ? React.createElement(\"form\", {\n      onSubmit: this.createProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productManufacturer\",\n      className: \"form-control\",\n      type: \"text\",\n      ref: this.productManufacturerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productModel\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productModelRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productName\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productNameRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productSrNo\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productSrNoRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productSymbolNo\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productSymbolNoRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productType\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productTypeRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Submit\")) : '')))) : '');\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/src/components/Proructs.js"],"names":["React","Component","createRef","base","Card","Icon","ContentEditable","Products","constructor","props","createProduct","event","preventDefault","addProduct","productManufacturerRef","current","value","productModelRef","productNameRef","productSrNoRef","productSymbolNoRef","productTypeRef","currentTarget","reset","id","manufacturer","model","name","srNo","symbolNo","type","products","state","manufactures","Manufacture","Model","Name","SrNo","SymbolNo","Type","setState","deleteProduct","updateProductManufacturer","Manufacturer","updateProductModel","updateProductName","updateProductSrNo","updateProductSymbolNo","updateProductType","createProductFormShow","createProductFormVisible","componentDidMount","ref","syncState","context","render","width","padding","margin","color","float","Object","keys","length","border","map","key","target","deleteManufacture"],"mappings":"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","sourcesContent":["import React, {Component, createRef} from 'react';\nimport {base} from '../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable'\n\n  class Products extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state={\n          products: null,\n          createProductFormVisible: false\n      }\n\n      this.productManufacturerRef = createRef();\n      this.productModelRef = createRef();\n      this.productNameRef = createRef();\n      this.productSrNoRef = createRef();\n      this.productSymbolNoRef = createRef();\n      this.productTypeRef = createRef()\n    }\n    \n    componentDidMount() {\n      this.ref = base.syncState(`manufactures`, {\n        context: this,\n        state: \"manufactures\"\n      });\n    }\n\n    createProduct = event => {\n      event.preventDefault();\n      this.addProduct(\n          this.productManufacturerRef.current.value, \n          this.productModelRef.current.value, \n          this.productNameRef.current.value,\n          this.productSrNoRef.current.value,\n          this.productSymbolNoRef.current.value,\n          this.productTypeRef.current.value\n        );\n      event.currentTarget.reset();\n    };\n\n    addProduct = (\n        id,\n        manufacturer, \n        model, \n        name, \n        srNo,\n        symbolNo,\n        type\n    ) => {\n      const products = { ...this.state.products };\n      manufactures[`${id}`]={\n          Manufacture : manufacturer, \n          Model :  model,\n          Name : name,\n          SrNo : srNo,\n          SymbolNo: symbolNo,\n          Type: type\n        };\n      this.setState({ products });\n    };\n\n    deleteProduct = id => {\n      const products = {...this.state.products}\n      products[`${id}`] = null;\n      this.setState({products})\n    }\n\n    updateProductManufacturer = (id, manufacturer) => {\n      const products = {...this.state.products}\n      products[`${id}`].Manufacturer = manufacturer;\n      this.setState({products})\n    }\n\n    updateProductModel = (id, model) => {\n        const products = {...this.state.products}\n        products[`${id}`].Model = model;\n        this.setState({products})\n    }\n\n\n    updateProductName = (id, name) => {\n        const products = {...this.state.products}\n        products[`${id}`].Name = name;\n        this.setState({products})\n    }\n\n    updateProductSrNo = (id, srNo) => {\n        const products = {...this.state.products}\n        products[`${id}`].SrNo = srNo;\n        this.setState({products})\n    }\n\n    updateProductSymbolNo = (id, symbolNo) => {\n        const products = {...this.state.products}\n        products[`${id}`].SymbolNo = symbolNo;\n        this.setState({products})\n    }\n\n    updateProductType = (id, type) => {\n        const products = {...this.state.products}\n        products[`${id}`].Type = type;\n        this.setState({products})\n    }\n\n    createProductFormShow = () => this.setState({createProductFormVisible:!this.state.createProductFormVisible})\n  \n    render() {\n        return  (\n            <>{this.state.products?\n                <div \n                    id=\"products\" \n                    style={{width: '100%', padding: \"25px\"}} \n                >        \n                    <Card\n                        style={{margin: '2px'}} \n                        title={\n                            <span \n                                style={{color:'rgb(0, 75, 222)'}}\n                            >\n                                Products\n                            </span>\n                        }\n                        extra={\n                            <Icon \n                                style={{color: 'green'}}\n                                type=\"edit\" \n                                key=\"edit\" \n                                onClick={this.createProductFormShow}\n                            />\n                        }\n                    >\n                    \n                        <div style={{float: 'center'}} className='row'>\n                            <div className='col-lg-6 col-md-12 col-sm-12'>\n                                <table \n                                    style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                    className=\"table table-responsive table-borderless\"\n                                >{Object.keys(this.state.products).length>0?\n                                    <thead>\n                                        <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                            <th scope=\"col\">Manufacturer</th>\n                                            <th scope=\"col\">Model</th>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">SrNo</th>\n                                            <th scope=\"col\">SymbolNo</th>\n                                            <th scope=\"col\">Type</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    :''\n                                }\n                                    <tbody>{Object.keys(this.state.products).map(\n                                        key => (\n                                            <tr \n                                                key={key} \n                                                style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                            >\n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].Manufacturer\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductManufacturer(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n                                                \n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].Model\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductModel(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n\n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].Name\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductName(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n\n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].SrNo\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductSrNo(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n\n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].SymbolNo\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductSymbolNo(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n\n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].Type\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductType(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n                                            \n                                                <td>\n                                                    <Icon\n                                                    style={{color: 'red'}} \n                                                    type=\"delete\" \n                                                    key=\"delete\" \n                                                    onClick={()=>this.deleteManufacture(key)}\n                                                />\n                                            </td>\n                                        </tr>           \n                                    ))}</tbody>\n                                </table>\n                            </div>\n\n                            <div className='col-lg-6 col-md-12 col-sm-12'>{this.state.createProductFormVisible === true?\n                                <form onSubmit={this.createProduct}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productManufacturer\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            ref={this.productManufacturerRef}\n                                        />\n                                    </div>\n                                \n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productModel\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productModelRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productName\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productNameRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productSrNo\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productSrNoRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productSymbolNo\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productSymbolNoRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productType\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productTypeRef}\n                                        />\n                                    </div>\n                                \n                                    <button \n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                    >\n                                        Submit\n                                    </button>\n                                </form>\n                                :''\n                            }</div>\n                        </div>\n                    </Card>\n                </div>\n                :''\n            }</>\n        )\n    }\n}\n\n\nexport default Products"]},"metadata":{},"sourceType":"module"}