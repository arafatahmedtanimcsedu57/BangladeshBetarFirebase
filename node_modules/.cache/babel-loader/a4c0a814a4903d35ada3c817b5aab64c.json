{"ast":null,"code":"import _defineProperty from \"/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/src/components/Proructs.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, createRef } from 'react';\nimport { base } from '../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable';\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addProduct = (id, manufacturer, model, name, srNo, symbolNo, type) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)] = {\n        Manufacturer: manufacturer,\n        Model: model,\n        Name: name,\n        SrNo: srNo,\n        SymbolNo: symbolNo,\n        Type: type\n      };\n      this.setState({\n        products\n      });\n    };\n\n    this.deleteProduct = id => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)] = null;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductManufacturer = (id, manufacturer) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Manufacturer = manufacturer;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductModel = (id, model) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Model = model;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductName = (id, name) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Name = name;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductSrNo = (id, srNo) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].SrNo = srNo;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductSymbolNo = (id, symbolNo) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].SymbolNo = symbolNo;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductType = (id, type) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Type = type;\n      this.setState({\n        products\n      });\n    };\n\n    this.createProductFormShow = () => this.setState({\n      createProductFormVisible: !this.state.createProductFormVisible\n    });\n\n    this.manufacturerSelectOptionShow = () => this.setState({\n      manufacturerSelectOptionVisiable: !this.state.manufacturerSelectOptionVisiable\n    });\n\n    this.dropDown = () => React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: event => this.updateProductManufacturer(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, Object.keys(this.state.manufactures) ? Object.keys(this.state.manufactures).map(item => React.createElement(\"option\", {\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, item)) : '');\n\n    this.state = {\n      products: null,\n      manufactures: null,\n      createProductFormVisible: false,\n      manufacturerSelectOptionVisiable: false\n    };\n    this.productManufacturerRef = createRef();\n    this.productModelRef = createRef();\n    this.productNameRef = createRef();\n    this.productSrNoRef = createRef();\n    this.productSymbolNoRef = createRef();\n    this.productTypeRef = createRef();\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"products\", {\n      context: this,\n      state: \"products\"\n    });\n    this.ref = base.syncState(\"manufactures\", {\n      context: this,\n      state: \"manufactures\"\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.state.products ? React.createElement(\"div\", {\n      id: \"products\",\n      style: {\n        width: '100%',\n        padding: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        margin: '2px'\n      },\n      title: React.createElement(\"span\", {\n        style: {\n          color: 'rgb(0, 75, 222)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Products\"),\n      extra: React.createElement(Icon, {\n        style: {\n          color: 'green'\n        },\n        type: \"edit\",\n        key: \"edit\",\n        onClick: this.createProductFormShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'center'\n      },\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      className: \"table table-responsive table-borderless\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, Object.keys(this.state.products).length > 0 ? React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Manufacturer\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Model\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"SrNo\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"SymbolNo\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Type\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Action\"))) : '', React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, Object.keys(this.state.products).map(key => React.createElement(\"tr\", {\n      key: key,\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: () => this.manufacturerSelectOptionShow(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.manufacturerSelectOptionVisiable === true ? this.dropDown() : this.state.products[key].Manufacturer), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Model,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductModel(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Name,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductName(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].SrNo,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductSrNo(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].SymbolNo,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductSymbolNo(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Type,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductType(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        color: 'red'\n      },\n      type: \"delete\",\n      key: \"delete\",\n      onClick: () => this.deleteProduct(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, this.state.createProductFormVisible === true ? React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        this.addProduct(Object.keys(this.state.products).length + 1, this.productManufacturerRef.current.value, this.productModelRef.current.value, this.productNameRef.current.value, this.productSrNoRef.current.value, this.productSymbolNoRef.current.value, this.productTypeRef.current.value);\n        event.currentTarget.reset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productManufacturer\",\n      className: \"form-control\",\n      type: \"text\",\n      ref: this.productManufacturerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productModel\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productModelRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productName\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productNameRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productSrNo\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productSrNoRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productSymbolNo\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productSymbolNoRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productType\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productTypeRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Submit\")) : '')))) : '');\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/src/components/Proructs.js"],"names":["React","Component","createRef","base","Card","Icon","ContentEditable","Products","constructor","props","addProduct","id","manufacturer","model","name","srNo","symbolNo","type","products","state","Manufacturer","Model","Name","SrNo","SymbolNo","Type","setState","deleteProduct","updateProductManufacturer","updateProductModel","updateProductName","updateProductSrNo","updateProductSymbolNo","updateProductType","createProductFormShow","createProductFormVisible","manufacturerSelectOptionShow","manufacturerSelectOptionVisiable","dropDown","event","key","target","value","Object","keys","manufactures","map","item","productManufacturerRef","productModelRef","productNameRef","productSrNoRef","productSymbolNoRef","productTypeRef","componentDidMount","ref","syncState","context","render","width","padding","margin","color","float","length","border","preventDefault","current","currentTarget","reset"],"mappings":"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","sourcesContent":["import React, {Component, createRef} from 'react';\nimport {base} from '../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable'\n\n  class Products extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state={\n          products: null,\n          manufactures: null,\n          createProductFormVisible: false,\n          manufacturerSelectOptionVisiable: false,\n      }\n\n      this.productManufacturerRef = createRef();\n      this.productModelRef = createRef();\n      this.productNameRef = createRef();\n      this.productSrNoRef = createRef();\n      this.productSymbolNoRef = createRef();\n      this.productTypeRef = createRef()\n    }\n    \n    componentDidMount() {\n        this.ref = base.syncState(`products`, {\n            context: this,\n            state: \"products\"\n        });\n\n        this.ref = base.syncState(`manufactures`, {\n            context: this,\n            state: \"manufactures\"\n        });\n    }\n\n    addProduct = (\n        id,\n        manufacturer, \n        model, \n        name, \n        srNo,\n        symbolNo,\n        type\n    ) => {\n      const products = { ...this.state.products };\n      products[`${id}`]={\n          Manufacturer : manufacturer, \n          Model :  model,\n          Name : name,\n          SrNo : srNo,\n          SymbolNo: symbolNo,\n          Type: type\n        };\n      this.setState({ products });\n    };\n\n    deleteProduct = id => {\n      const products = {...this.state.products}\n      products[`${id}`] = null;\n      this.setState({products})\n    }\n\n    updateProductManufacturer = (id, manufacturer) => {\n      const products = {...this.state.products}\n      products[`${id}`].Manufacturer = manufacturer;\n      this.setState({products})\n    }\n\n    updateProductModel = (id, model) => {\n        const products = {...this.state.products}\n        products[`${id}`].Model = model;\n        this.setState({products})\n    }\n\n\n    updateProductName = (id, name) => {\n        const products = {...this.state.products}\n        products[`${id}`].Name = name;\n        this.setState({products})\n    }\n\n    updateProductSrNo = (id, srNo) => {\n        const products = {...this.state.products}\n        products[`${id}`].SrNo = srNo;\n        this.setState({products})\n    }\n\n    updateProductSymbolNo = (id, symbolNo) => {\n        const products = {...this.state.products}\n        products[`${id}`].SymbolNo = symbolNo;\n        this.setState({products})\n    }\n\n    updateProductType = (id, type) => {\n        const products = {...this.state.products}\n        products[`${id}`].Type = type;\n        this.setState({products})\n    }\n\n    createProductFormShow = () => this.setState({createProductFormVisible: !this.state.createProductFormVisible})\n    manufacturerSelectOptionShow = () => this.setState({manufacturerSelectOptionVisiable: !this.state.manufacturerSelectOptionVisiable})\n\n    dropDown = () => <select \n            className=\"form-control\" \n            onChange={(event)=>\n                this.updateProductManufacturer(key, event.target.value)\n            }\n        >{\n            Object.keys(this.state.manufactures)?\n                Object.keys(this.state.manufactures).map(item=>\n                    <option className=\"dropdown-item\" >\n                        {item}\n                    </option>\n                )\n                :''\n        }</select>\n    render() {\n        return  (\n            <>{this.state.products?\n                <div \n                    id=\"products\" \n                    style={{width: '100%', padding: \"25px\"}} \n                >        \n                    <Card\n                        style={{margin: '2px'}} \n                        title={\n                            <span \n                                style={{color:'rgb(0, 75, 222)'}}\n                            >\n                                Products\n                            </span>\n                        }\n                        extra={\n                            <Icon \n                                style={{color: 'green'}}\n                                type=\"edit\" \n                                key=\"edit\" \n                                onClick={this.createProductFormShow}\n                            />\n                        }\n                    >\n                    \n                        <div style={{float: 'center'}} className='row'>\n                            <div className='col-lg-6 col-md-12 col-sm-12'>\n                                <table \n                                    style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                    className=\"table table-responsive table-borderless\"\n                                >{Object.keys(this.state.products).length>0?\n                                    <thead>\n                                        <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                            <th scope=\"col\">Manufacturer</th>\n                                            <th scope=\"col\">Model</th>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">SrNo</th>\n                                            <th scope=\"col\">SymbolNo</th>\n                                            <th scope=\"col\">Type</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    :''\n                                }\n                                    <tbody>{Object.keys(this.state.products).map(\n                                        key => (\n                                            <tr \n                                                key={key} \n                                                style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                            >\n                                                <td onClick={()=>this.manufacturerSelectOptionShow()}>\n                                                {this.state.manufacturerSelectOptionVisiable===true? \n                                                    this.dropDown()\n                                                    :this.state.products[key].Manufacturer}\n                                                    {/* <ContentEditable\n                                                        html={\n                                                            this.state.products[key].Manufacturer\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductManufacturer(key, event.target.value)\n                                                        }\n                                                    /> */}\n\n                                                </td>\n                                                \n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].Model\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductModel(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n\n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].Name\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductName(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n\n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].SrNo\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductSrNo(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n\n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].SymbolNo\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductSymbolNo(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n\n                                                <td>\n                                                    <ContentEditable\n                                                        html={\n                                                            this.state.products[key].Type\n                                                        }\n                                                        data-column=\"item\"\n                                                        className=\"content-editable\"\n                                                        key={key}\n                                                        onChange={(event)=>\n                                                            this.updateProductType(key, event.target.value)\n                                                        }\n                                                    />\n                                                </td>\n                                            \n                                                <td>\n                                                    <Icon\n                                                    style={{color: 'red'}} \n                                                    type=\"delete\" \n                                                    key=\"delete\" \n                                                    onClick={()=>this.deleteProduct(key)}\n                                                />\n                                            </td>\n                                        </tr>           \n                                    ))}</tbody>\n                                </table>\n                            </div>\n\n                            <div className='col-lg-6 col-md-12 col-sm-12'>{this.state.createProductFormVisible === true?\n                                <form onSubmit={(event)=>{\n                                    event.preventDefault()\n\n                                    this.addProduct(\n                                        Object.keys(this.state.products).length+1,\n                                        this.productManufacturerRef.current.value, \n                                        this.productModelRef.current.value, \n                                        this.productNameRef.current.value,\n                                        this.productSrNoRef.current.value,\n                                        this.productSymbolNoRef.current.value,\n                                        this.productTypeRef.current.value\n                                    )\n\n                                    event.currentTarget.reset();\n                                }}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productManufacturer\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            ref={this.productManufacturerRef}\n                                        />\n                                    </div>\n                                \n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productModel\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productModelRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productName\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productNameRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productSrNo\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productSrNoRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productSymbolNo\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productSymbolNoRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productType\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productTypeRef}\n                                        />\n                                    </div>\n                                \n                                    <button \n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                    >\n                                        Submit\n                                    </button>\n                                </form>\n                                :''\n                            }</div>\n                        </div>\n                    </Card>\n                </div>\n                :''\n            }</>\n        )\n    }\n}\n\n\nexport default Products"]},"metadata":{},"sourceType":"module"}