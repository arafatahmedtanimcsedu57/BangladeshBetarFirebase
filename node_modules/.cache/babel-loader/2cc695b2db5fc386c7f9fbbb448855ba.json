{"ast":null,"code":"import _defineProperty from \"/home/swad/Desktop/my_work/BangladeshBetarFirebase/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/swad/Desktop/my_work/BangladeshBetarFirebase/src/components/Users.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, createRef } from 'react';\nimport { base } from '../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable';\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addProduct = (id, manufacturer, model, name, srNo, symbolNo, type) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)] = {\n        Manufacturer: manufacturer,\n        Model: model,\n        Name: name,\n        SrNo: srNo,\n        SymbolNo: symbolNo,\n        Type: type\n      };\n      this.setState({\n        products\n      });\n    };\n\n    this.deleteProduct = id => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)] = null;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductManufacturer = (id, manufacturer) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Manufacturer = manufacturer;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductModel = (id, model) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Model = model;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductName = (id, name) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].Name = name;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductSrNo = (id, srNo) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].SrNo = srNo;\n      this.setState({\n        products\n      });\n    };\n\n    this.updateProductSymbolNo = (id, symbolNo) => {\n      const products = _objectSpread({}, this.state.products);\n\n      products[\"\".concat(id)].SymbolNo = symbolNo;\n      this.setState({\n        products\n      });\n    };\n\n    this.createProductFormShow = () => this.setState({\n      createProductFormVisible: !this.state.createProductFormVisible\n    });\n\n    this.manufacturerSelectOptionShow = () => this.setState({\n      manufacturerSelectOptionVisiable: !this.state.manufacturerSelectOptionVisiable\n    });\n\n    this.dropDown = (key, manufacturer) => React.createElement(\"select\", {\n      className: \"form-control form-control-sm\",\n      onChange: event => {\n        event.persist();\n        this.updateProductManufacturer(key, event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, Object.keys(this.state.manufactures) ? Object.keys(this.state.manufactures).map((item, index) => item === manufacturer ? React.createElement(\"option\", {\n      selected: true,\n      key: index,\n      value: item,\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, item) : React.createElement(\"option\", {\n      key: index,\n      value: item,\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, item)) : '');\n\n    this.state = {\n      products: null,\n      instrumnet: null,\n      parts: null,\n      manufactures: null,\n      createProductFormVisible: false,\n      manufacturerSelectOptionVisiable: false\n    };\n    this.productManufacturerRef = createRef();\n    this.productModelRef = createRef();\n    this.productNameRef = createRef();\n    this.productSrNoRef = createRef();\n    this.productSymbolNoRef = createRef();\n    this.productTypeRef = createRef();\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"products\", {\n      context: this,\n      state: \"products\"\n    });\n    this.ref = base.syncState(\"manufactures\", {\n      context: this,\n      state: \"manufactures\"\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.state.products ? React.createElement(\"div\", {\n      id: \"users\",\n      style: {\n        width: '100%',\n        padding: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        margin: '2px'\n      },\n      title: React.createElement(\"span\", {\n        style: {\n          color: 'rgb(0, 75, 222)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Users\"),\n      extra: React.createElement(Icon, {\n        style: {\n          color: 'green'\n        },\n        type: \"edit\",\n        key: \"edit\",\n        onClick: this.createProductFormShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'center'\n      },\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'rgba(0, 75, 222, 0.5)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Parts\"), React.createElement(\"table\", {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      className: \"table table-responsive table-borderless\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, Object.keys(this.state.products).length > 0 ? React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Role\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Station\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Designation\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Mobile No. \"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Action\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Action\"))) : '', React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, Object.keys(this.state.products).map(key => this.state.products[key].Type === 'Parts' ? React.createElement(\"tr\", {\n      key: key,\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: () => this.manufacturerSelectOptionShow(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.manufacturerSelectOptionVisiable === true ? this.dropDown(key, this.state.products[key].Manufacturer) : this.state.products[key].Manufacturer), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Model,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductModel(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Name,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductName(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].SrNo,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductSrNo(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].SymbolNo,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductSymbolNo(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        color: 'red'\n      },\n      type: \"delete\",\n      key: \"delete\",\n      onClick: () => this.deleteProduct(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }))) : null))), React.createElement(\"span\", {\n      style: {\n        color: 'rgba(0, 75, 222, 0.5)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Instrument\"), React.createElement(\"table\", {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      className: \"table table-responsive table-borderless\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, Object.keys(this.state.products).length > 0 ? React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Manufacturer\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Model\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"SrNo\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"SymbolNo\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Action\"))) : '', React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, Object.keys(this.state.products).map(key => this.state.products[key].Type === 'Instrument' ? React.createElement(\"tr\", {\n      key: key,\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: () => this.manufacturerSelectOptionShow(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, this.state.manufacturerSelectOptionVisiable === true ? this.dropDown(key, this.state.products[key].Manufacturer) : this.state.products[key].Manufacturer), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Model,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductModel(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].Name,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductName(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].SrNo,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductSrNo(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.products[key].SymbolNo,\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateProductSymbolNo(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        color: 'red'\n      },\n      type: \"delete\",\n      key: \"delete\",\n      onClick: () => this.deleteProduct(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }))) : null)))), React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, this.state.createProductFormVisible === true ? React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        this.addProduct(parseInt(Object.keys(this.state.products)[Object.keys(this.state.products).length - 1]) + 1, this.productManufacturerRef.current.value, this.productModelRef.current.value, this.productNameRef.current.value, this.productSrNoRef.current.value, this.productSymbolNoRef.current.value, this.productTypeRef.current.value);\n        event.currentTarget.reset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      ref: this.productManufacturerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, Object.keys(this.state.manufactures) ? Object.keys(this.state.manufactures).map((item, index) => React.createElement(\"option\", {\n      key: index,\n      value: item,\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, item)) : '')), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productModel\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productModelRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productName\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productNameRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productSrNo\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productSrNoRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"productSymbolNo\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.productSymbolNoRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      ref: this.productTypeRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      key: \"1\",\n      value: \"Parts\",\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"Parts\"), React.createElement(\"option\", {\n      key: \"2\",\n      value: \"Instrument\",\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"Instrument\"))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \"Submit\")) : '')))) : '');\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["/home/swad/Desktop/my_work/BangladeshBetarFirebase/src/components/Users.js"],"names":["React","Component","createRef","base","Card","Icon","ContentEditable","Users","constructor","props","addProduct","id","manufacturer","model","name","srNo","symbolNo","type","products","state","Manufacturer","Model","Name","SrNo","SymbolNo","Type","setState","deleteProduct","updateProductManufacturer","updateProductModel","updateProductName","updateProductSrNo","updateProductSymbolNo","createProductFormShow","createProductFormVisible","manufacturerSelectOptionShow","manufacturerSelectOptionVisiable","dropDown","key","event","persist","target","value","Object","keys","manufactures","map","item","index","instrumnet","parts","productManufacturerRef","productModelRef","productNameRef","productSrNoRef","productSymbolNoRef","productTypeRef","componentDidMount","ref","syncState","context","render","width","padding","margin","color","float","length","border","preventDefault","parseInt","current","currentTarget","reset"],"mappings":"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","sourcesContent":["import React, {Component, createRef} from 'react';\nimport {base} from '../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable'\n\n  class Users extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state={\n          products: null,\n          instrumnet: null,\n          parts: null,\n          manufactures: null,\n          createProductFormVisible: false,\n          manufacturerSelectOptionVisiable: false,\n      }\n\n      this.productManufacturerRef = createRef();\n      this.productModelRef = createRef();\n      this.productNameRef = createRef();\n      this.productSrNoRef = createRef();\n      this.productSymbolNoRef = createRef();\n      this.productTypeRef = createRef()\n    }\n    \n    componentDidMount() {\n        this.ref = base.syncState(`products`, {\n            context: this,\n            state: \"products\"\n        });\n\n        this.ref = base.syncState(`manufactures`, {\n            context: this,\n            state: \"manufactures\"\n        });\n    }\n\n    addProduct = (\n        id,\n        manufacturer, \n        model, \n        name, \n        srNo,\n        symbolNo,\n        type\n    ) => {\n      const products = { ...this.state.products };\n      products[`${id}`]={\n          Manufacturer : manufacturer, \n          Model :  model,\n          Name : name,\n          SrNo : srNo,\n          SymbolNo: symbolNo,\n          Type: type\n        };\n      this.setState({ products });\n    };\n\n    deleteProduct = id => {\n      const products = {...this.state.products}\n      products[`${id}`] = null;\n      this.setState({products})\n    }\n\n    updateProductManufacturer = (id, manufacturer) => {\n      const products = {...this.state.products}\n      products[`${id}`].Manufacturer = manufacturer;\n      this.setState({products})\n    }\n\n    updateProductModel = (id, model) => {\n        const products = {...this.state.products}\n        products[`${id}`].Model = model;\n        this.setState({products})\n    }\n\n\n    updateProductName = (id, name) => {\n        const products = {...this.state.products}\n        products[`${id}`].Name = name;\n        this.setState({products})\n    }\n\n    updateProductSrNo = (id, srNo) => {\n        const products = {...this.state.products}\n        products[`${id}`].SrNo = srNo;\n        this.setState({products})\n    }\n\n    updateProductSymbolNo = (id, symbolNo) => {\n        const products = {...this.state.products}\n        products[`${id}`].SymbolNo = symbolNo;\n        this.setState({products})\n    }\n\n    createProductFormShow = () => this.setState({createProductFormVisible: !this.state.createProductFormVisible})\n    manufacturerSelectOptionShow = () => this.setState({manufacturerSelectOptionVisiable: !this.state.manufacturerSelectOptionVisiable})\n\n    dropDown = (key, manufacturer) => \n        <select \n            className=\"form-control form-control-sm\" \n            onChange={(event)=>{\n                event.persist()\n                this.updateProductManufacturer(key, event.target.value)\n            }}\n        >{Object.keys(this.state.manufactures)?\n        Object.keys(this.state.manufactures).map((item, index)=>\n        item === manufacturer? \n            <option selected key={index} value={item} className=\"dropdown-item\" >\n                {item}\n            </option>\n            :<option key={index} value={item} className=\"dropdown-item\" >\n                {item}\n            </option>)\n            :''\n        }</select>\n    render() {\n        return  (\n            <>{this.state.products?\n                <div \n                    id=\"users\" \n                    style={{width: '100%', padding: \"25px\"}} \n                >        \n                    <Card\n                        style={{margin: '2px'}} \n                        title={\n                            <span style={{color:'rgb(0, 75, 222)'}}>\n                                Users\n                            </span>\n                        }\n                        extra={\n                            <Icon \n                                style={{color: 'green'}}\n                                type=\"edit\" \n                                key=\"edit\" \n                                onClick={this.createProductFormShow}\n                            />\n                        }\n                    >\n                    \n                        <div style={{float: 'center'}} className='row'>\n                            <div className='col-lg-6 col-md-12 col-sm-12'>\n                                <span style={{color:'rgba(0, 75, 222, 0.5)'}}>Parts</span>\n                                <table \n                                    style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                    className=\"table table-responsive table-borderless\"\n                                >{Object.keys(this.state.products).length>0?\n                                    <thead>\n                                        <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">Role</th>\n                                            <th scope=\"col\">Station</th>\n                                            <th scope=\"col\">Designation</th>\n                                            <th scope=\"col\">Mobile No. </th>\n                                            <th scope=\"col\">Action</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    :''}\n                                    <tbody>{Object.keys(this.state.products).map(key => (\n                                        this.state.products[key].Type === 'Parts'?\n                                        <tr \n                                            key={key} \n                                            style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                        >\n                                            <td onClick={()=>this.manufacturerSelectOptionShow()}>{\n                                                this.state.manufacturerSelectOptionVisiable===true? \n                                                this.dropDown(key, this.state.products[key].Manufacturer)\n                                                :this.state.products[key].Manufacturer\n                                            }</td>\n                                                \n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].Model}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductModel(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].Name}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductName(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].SrNo}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductSrNo(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].SymbolNo}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductSymbolNo(key, event.target.value)}\n                                                />\n                                            </td>\n                                            \n                                            <td>\n                                                <Icon\n                                                    style={{color: 'red'}} \n                                                    type=\"delete\" \n                                                    key=\"delete\" \n                                                    onClick={()=>this.deleteProduct(key)}\n                                                />\n                                            </td>\n                                        </tr>\n                                        :null           \n                                    ))}</tbody>\n                                </table>\n\n\n                                <span style={{color:'rgba(0, 75, 222, 0.5)'}}>Instrument</span>\n                                <table \n                                    style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                    className=\"table table-responsive table-borderless\"\n                                >{Object.keys(this.state.products).length>0?\n                                    <thead>\n                                        <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                            <th scope=\"col\">Manufacturer</th>\n                                            <th scope=\"col\">Model</th>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">SrNo</th>\n                                            <th scope=\"col\">SymbolNo</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    :''}\n                                    <tbody>{Object.keys(this.state.products).map(key => (\n                                        this.state.products[key].Type === 'Instrument'?\n                                        <tr \n                                            key={key} \n                                            style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                        >\n                                            <td onClick={()=>this.manufacturerSelectOptionShow()}>{\n                                                this.state.manufacturerSelectOptionVisiable===true? \n                                                    this.dropDown(key, this.state.products[key].Manufacturer)\n                                                    :this.state.products[key].Manufacturer\n                                            }</td>\n                                        \n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].Model}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductModel(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].Name}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductName(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].SrNo}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductSrNo(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].SymbolNo}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductSymbolNo(key, event.target.value)}\n                                                />\n                                            </td>\n                                    \n                                            <td>\n                                                <Icon\n                                                    style={{color: 'red'}} \n                                                    type=\"delete\" \n                                                    key=\"delete\" \n                                                    onClick={()=>this.deleteProduct(key)}\n                                                />\n                                            </td>\n                                        </tr>\n                                        :null           \n                                    ))}</tbody>\n                                </table>\n                            </div>\n\n                            <div className='col-lg-6 col-md-12 col-sm-12'>{this.state.createProductFormVisible === true?\n                                <form onSubmit={(event)=>{\n                                    event.preventDefault()\n\n                                    this.addProduct(\n                                        parseInt(Object.keys(this.state.products)[Object.keys(this.state.products).length-1])+1,\n                                        this.productManufacturerRef.current.value, \n                                        this.productModelRef.current.value, \n                                        this.productNameRef.current.value,\n                                        this.productSrNoRef.current.value,\n                                        this.productSymbolNoRef.current.value,\n                                        this.productTypeRef.current.value\n                                    )\n\n                                    event.currentTarget.reset();\n                                }}>\n                                    <div className=\"form-group\">\n                                        <select \n                                            className=\"form-control\" \n                                            ref={this.productManufacturerRef}\n                                        >{Object.keys(this.state.manufactures)?\n                                        Object.keys(this.state.manufactures).map((item, index)=>\n                                            <option \n                                                key={index} \n                                                value={item} \n                                                className=\"dropdown-item\" \n                                            >\n                                                {item}\n                                            </option>)\n                                            :''\n                                        }</select>                  \n                                    </div>\n                                \n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productModel\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productModelRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productName\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productNameRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productSrNo\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productSrNoRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productSymbolNo\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productSymbolNoRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <select \n                                            className=\"form-control\" \n                                            ref={this.productTypeRef}\n                                        >\n                                            <option \n                                                key='1' \n                                                value='Parts'\n                                                className=\"dropdown-item\" \n                                            >\n                                                Parts\n                                            </option>\n\n                                            <option \n                                                key='2' \n                                                value='Instrument' \n                                                className=\"dropdown-item\" \n                                            >\n                                                Instrument\n                                            </option>\n                                        </select> \n                                    </div>\n                                \n                                    <button \n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                    >\n                                        Submit\n                                    </button>\n                                </form>\n                                :''\n                            }</div>\n                        </div>\n                    </Card>\n                </div>\n                :''\n            }</>\n        )\n    }\n}\n\n\nexport default Users"]},"metadata":{},"sourceType":"module"}