{"ast":null,"code":"import _defineProperty from \"/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/src/components/Stations.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, createRef } from 'react';\nimport { base } from './../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable';\n\nclass Stations extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createStation = event => {\n      event.preventDefault();\n      const station = {\n        [this.stationNameRef.current.value]: this.stationAddressRef.current.value\n      };\n      this.addStation(this.stationNameRef.current.value, this.stationAddressRef.current.value);\n      event.currentTarget.reset();\n    };\n\n    this.addStation = (name, address) => {\n      const stations = _objectSpread({}, this.state.stations);\n\n      stations[\"\".concat(name)] = address;\n      this.setState({\n        stations\n      });\n    };\n\n    this.deleteStation = name => {\n      const stations = _objectSpread({}, this.state.stations);\n\n      console.log(stations[\"\".concat(name)]);\n      stations[\"\".concat(name)] = null;\n      this.setState({\n        stations\n      });\n    };\n\n    this.updateStationAddress = (name, address) => {\n      const stations = _objectSpread({}, this.state.stations);\n\n      console.log(stations[\"\".concat(name)]);\n      stations[\"\".concat(name)] = address;\n      this.setState({\n        stations\n      });\n    };\n\n    this.createStationFormShow = () => this.setState({\n      createStationFormVisible: !this.state.createStationFormVisible\n    });\n\n    this.state = {\n      permission: null,\n      stations: null,\n      createStationFormVisible: false\n    };\n    this.stationNameRef = createRef();\n    this.stationAddressRef = createRef();\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"users/\".concat(this.props.user.uid, \"/\").concat(this.props.role, \"/permission\"), {\n      context: this,\n      state: \"permission\"\n    });\n    this.ref = base.syncState(\"stations\", {\n      context: this,\n      state: \"stations\"\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.state.stations ? React.createElement(\"div\", {\n      id: \"stations\",\n      style: {\n        width: '100%',\n        padding: \"0 25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%',\n        margin: '2px'\n      },\n      title: \"Stations\",\n      extra: React.createElement(Icon, {\n        type: \"edit\",\n        key: \"edit\",\n        onClick: this.createStationFormShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        overflowX: 'scroll',\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      className: \"table table-borderless\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, Object.keys(this.state.stations).length > 0 ? React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Station Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Action\"))) : '', React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, Object.keys(this.state.stations).map(key => React.createElement(\"tr\", {\n      key: key,\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, key), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.state.stations[key],\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.updateStationAddress(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      key: \"delete\",\n      onClick: () => this.deleteStation(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))))))), this.state.createStationFormVisible === true ? React.createElement(Card, {\n      style: {\n        width: '100%',\n        margin: '2px'\n      },\n      title: \"Add New Station\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.createStation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"stationName\",\n      className: \"form-control\",\n      type: \"text\",\n      ref: this.stationNameRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"stationAddress\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.stationAddressRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Submit\"))) : '') : '');\n  }\n\n}\n\nexport default Stations;","map":{"version":3,"sources":["/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/src/components/Stations.js"],"names":["React","Component","createRef","base","Card","Icon","ContentEditable","Stations","constructor","props","createStation","event","preventDefault","station","stationNameRef","current","value","stationAddressRef","addStation","currentTarget","reset","name","address","stations","state","setState","deleteStation","console","log","updateStationAddress","createStationFormShow","createStationFormVisible","permission","componentDidMount","ref","syncState","user","uid","role","context","render","width","padding","margin","overflowX","color","Object","keys","length","border","map","key","target"],"mappings":"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","sourcesContent":["import React, {Component, createRef} from 'react';\nimport {base} from './../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable'\n\n  class Stations extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state={\n          permission:null,\n          stations: null,\n\n          createStationFormVisible: false\n      }\n\n      this.stationNameRef = createRef();\n      this.stationAddressRef = createRef();\n    }\n    \n    componentDidMount() {\n      this.ref = base.syncState(`users/${this.props.user.uid}/${this.props.role}/permission`, {\n        context: this,\n        state: \"permission\"\n      });\n\n      this.ref = base.syncState(`stations`, {\n        context: this,\n        state: \"stations\"\n      });\n    }\n\n    createStation = event => {\n      event.preventDefault();\n      const station = {\n        [this.stationNameRef.current.value]:this.stationAddressRef.current.value\n      };\n      this.addStation(this.stationNameRef.current.value, this.stationAddressRef.current.value);\n      event.currentTarget.reset();\n    };\n\n    addStation = (name, address) => {\n      const stations = { ...this.state.stations };\n      stations[`${name}`] =  address;\n      this.setState({ stations });\n    };\n\n    deleteStation = name => {\n      const stations = {...this.state.stations}\n      console.log(stations[`${name}`])\n      stations[`${name}`] = null;\n      this.setState({stations})\n    }\n\n    updateStationAddress = (name, address) => {\n      const stations = {...this.state.stations}\n      console.log(stations[`${name}`])\n      stations[`${name}`] = address;\n      this.setState({stations})\n    }\n\n    createStationFormShow = () => this.setState({createStationFormVisible:!this.state.createStationFormVisible})\n  \n    render() {\n      return  (\n            <>{\n                this.state.stations?\n                    <div \n                        id=\"stations\" \n                        style={{width: '100%', padding: \"0 25px\"}} \n                    >        \n                        <Card \n                            style={{width: '100%', margin: '2px'}} \n                            title=\"Stations\"\n                            extra={\n                                <Icon \n                                    type=\"edit\" \n                                    key=\"edit\" \n                                    onClick={this.createStationFormShow}\n                                />\n                            }\n                        >\n                    \n                            <table \n                                style={{overflowX: 'scroll', color: \"rgba(0, 0, 0, 0.5)\"}} \n                                className=\"table table-borderless\"\n                            >{\n                                Object.keys(this.state.stations).length>0?\n                                <thead>\n                                    <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                        <th scope=\"col\">Station Name</th>\n                                        <th scope=\"col\">Address</th>\n                                        <th scope=\"col\">Action</th>\n                                    </tr>\n                                </thead>\n                                :''\n                            }\n                                \n                                <tbody>{\n                                    Object.keys(this.state.stations).map(key => (\n                                    <tr \n                                        key={key} \n                                        style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                    >\n                                        <td>{key}</td>\n                                        <td>\n                                            <ContentEditable\n                                                html={this.state.stations[key]}\n                                                data-column=\"item\"\n                                                className=\"content-editable\"\n                                                key={key}\n                                                onChange={(event)=>this.updateStationAddress(key, event.target.value)}\n                                            />\n                                        </td>\n                                        <td>\n                                            <Icon \n                                                type=\"delete\" \n                                                key=\"delete\" \n                                                onClick={()=>this.deleteStation(key)}\n                                            />\n                                        </td>\n                                    </tr>           \n                                ))}</tbody>\n                            </table>\n                        </Card>{\n                        this.state.createStationFormVisible === true?\n                        <Card  \n                            style={{width: '100%', margin:'2px'}} \n                            title=\"Add New Station\"\n                        >\n                            <form onSubmit={this.createStation}>\n                                <div className=\"form-group\">\n                                    <input\n                                        name=\"stationName\"\n                                        className=\"form-control\"\n                                        type=\"text\"\n                                        ref={this.stationNameRef}\n                                    />\n                                </div>\n                            \n                                <div className=\"form-group\">\n                                    <input\n                                        name=\"stationAddress\"\n                                        className=\"form-control\"\n                                        type=\"text\"\n                                        autoComplete=\"none\"\n                                        ref={this.stationAddressRef}\n                                    />\n                                </div>\n                            \n                                <button \n                                    type=\"submit\"\n                                    className=\"btn btn-primary\"\n                                >\n                                    Submit\n                                </button>\n                            </form>\n                        </Card>\n                        :''}\n                    </div>\n                    :''\n                }\n            </>\n        )\n    }\n}\n\n\nexport default Stations"]},"metadata":{},"sourceType":"module"}