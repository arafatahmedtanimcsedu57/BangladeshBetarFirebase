{"ast":null,"code":"import _defineProperty from \"/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/src/components/Dashboard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { base } from '../firebase/firebase';\nimport Stations from './Stations';\nimport Manufactures from './Manufactures';\nimport Products from './Proructs';\nimport Intents from './Intents';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateRunningIntentSelected = (id, selected) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      console.log(id, selected); // userInfo[`running-intent`][`items`][`${id}`][`selected`]===\"on\"?\n      // userInfo[`running-intent`][`items`][`${id}`][`selected`] = \"off\"\n      // :userInfo[`running-intent`][`items`][`${id}`][`selected`] = \"on\"\n      // this.setState({userInfo})\n    };\n\n    this.updateRunningIntentProductManufacturer = (id, manufacturer) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"product-manufacturer\"] = manufacturer;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentProductModel = (id, model) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"product-model\"] = model;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentProductName = (id, name) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"product-name\"] = name;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentLastYear = (id, lastYear) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"last-year\"] = lastYear;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentNextYear = (id, nextYear) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"next-year\"] = nextYear;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentUse = (id, use) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"use\"] = use;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentSelected = (id, selected) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"selected\"] = selected;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.state = {\n      userInfo: null\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"users/\".concat(this.props.user.uid), {\n      context: this,\n      state: \"userInfo\"\n    });\n  }\n\n  render() {\n    return this.state.userInfo !== null ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        background: '#007bff',\n        position: 'sticky',\n        top: 0,\n        zIndex: 100\n      },\n      className: \"top-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"nav nav-tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'black'\n      },\n      className: \"nav-link\",\n      href: \"#stations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Stations\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'black'\n      },\n      className: \"nav-link\",\n      href: \"#manufactures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Manufactures\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'black'\n      },\n      className: \"nav-link\",\n      href: \"#products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Products\")))), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Stations, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Manufactures, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Products, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Intents, {\n      userInfo: this.state.userInfo,\n      updateRunningIntentSelected: this.state.updateRunningIntentSelected,\n      updateRunningIntentLastYear: this.updateRunningIntentLastYear,\n      updateRunningIntentNextYear: this.updateRunningIntentNextYear,\n      updateRunningIntentProductManufacturer: this.updateRunningIntentProductManufacturer,\n      updateRunningIntentProductModel: this.updateRunningIntentProductModel,\n      updateRunningIntentProductName: this.updateRunningIntentProductName,\n      updateRunningIntentUse: this.updateRunningIntentUse,\n      updateRunningIntentSelected: this.updateRunningIntentSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Session Out\");\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/src/components/Dashboard.js"],"names":["React","Component","base","Stations","Manufactures","Products","Intents","Dashboard","constructor","props","updateRunningIntentSelected","id","selected","userInfo","state","console","log","updateRunningIntentProductManufacturer","manufacturer","setState","updateRunningIntentProductModel","model","updateRunningIntentProductName","name","updateRunningIntentLastYear","lastYear","updateRunningIntentNextYear","nextYear","updateRunningIntentUse","use","componentDidMount","ref","syncState","user","uid","context","render","background","position","top","zIndex","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {base} from '../firebase/firebase';\nimport Stations from './Stations';\nimport Manufactures from './Manufactures';\nimport Products from './Proructs';\nimport Intents from './Intents';\n\n\n  class Dashboard extends Component {\n    constructor(props){\n      super(props)\n\n      this.state={\n        userInfo: null\n      }\n    }\n    componentDidMount(){\n      this.ref = base.syncState(`users/${this.props.user.uid}`, {\n        context: this,\n        state: \"userInfo\"\n      });\n    }\n\n    updateRunningIntentSelected = (id, selected) => {\n      const userInfo = {...this.state.userInfo}\n      console.log(id, selected)\n      // userInfo[`running-intent`][`items`][`${id}`][`selected`]===\"on\"?\n      // userInfo[`running-intent`][`items`][`${id}`][`selected`] = \"off\"\n      // :userInfo[`running-intent`][`items`][`${id}`][`selected`] = \"on\"\n      // this.setState({userInfo})\n    }\n\n    updateRunningIntentProductManufacturer = (id, manufacturer) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`product-manufacturer`] = manufacturer;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentProductModel = (id, model) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`product-model`] = model;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentProductName = (id, name) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`product-name`] = name;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentLastYear = (id, lastYear) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`last-year`] = lastYear;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentNextYear = (id, nextYear) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`next-year`] = nextYear;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentUse = (id, use) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`use`] = use;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentSelected = (id, selected) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`selected`] = selected;\n      this.setState({userInfo})\n    }\n\n    render() {\n      return  (\n        this.state.userInfo!==null?\n        <>\n          <div style={{\n              background:'#007bff',\n              position: 'sticky',\n              top: 0,\n              zIndex: 100\n            }} \n            className=\"top-nav\"\n          >\n            <ul className=\"nav nav-tabs\">\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#stations\">Stations</a>\n              </li>\n\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#manufactures\">Manufactures</a>\n              </li>\n\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#products\">Products</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"main\">\n            <Stations />\n            <Manufactures />\n            <Products />\n            <Intents \n              userInfo={this.state.userInfo}\n\n              updateRunningIntentSelected={this.state.updateRunningIntentSelected}\n              updateRunningIntentLastYear={this.updateRunningIntentLastYear}\n              updateRunningIntentNextYear={this.updateRunningIntentNextYear}\n              updateRunningIntentProductManufacturer={this.updateRunningIntentProductManufacturer}\n              updateRunningIntentProductModel={this.updateRunningIntentProductModel}\n              updateRunningIntentProductName={this.updateRunningIntentProductName}\n              updateRunningIntentUse={this.updateRunningIntentUse}\n              updateRunningIntentSelected={this.updateRunningIntentSelected}\n            />\n          </div>\n        </>:<h1>Session Out</h1>\n      )\n    }\n  }\n  \n  \n  export default Dashboard;\n  "]},"metadata":{},"sourceType":"module"}