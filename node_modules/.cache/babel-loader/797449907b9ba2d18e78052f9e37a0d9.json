{"ast":null,"code":"var _jsxFileName = \"/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/src/shared/Form.js\";\nimport React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { auth } from '../firebase';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.email = createRef();\n    this.password = createRef();\n    this.handleSuccess = this.handleSuccess.bind(this);\n    this.handleErrors = this.handleErrors.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSuccess() {\n    this.resetForm();\n    this.props.onSuccess && this.props.onSuccess();\n  }\n\n  handleErrors(reason) {\n    this.props.onError && this.props.onError(reason);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const email = this.email,\n          password = this.password,\n          action = this.props.action;\n    auth.userSession(action, email.current.value, password.current.value).then(this.handleSuccess).catch(this.handleErrors);\n  }\n\n  resetForm() {\n    if (!this.email.current || !this.password.current) {\n      return;\n    }\n\n    const _Form$defaultProps = Form.defaultProps,\n          email = _Form$defaultProps.email,\n          password = _Form$defaultProps.password;\n    this.email.current.value = email;\n    this.password.current.value = password;\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"input\", {\n      name: \"name\",\n      type: \"email\",\n      ref: this.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      autoComplete: \"none\",\n      ref: this.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n  onSuccess: PropTypes.func,\n  onError: PropTypes.func\n};\nForm.defaultProps = {\n  errors: '',\n  email: '',\n  password: ''\n};\nexport default Form;","map":{"version":3,"sources":["/home/arafat/FrontEndDevelop/clientProjects/bangladesh-betar/src/shared/Form.js"],"names":["React","Component","createRef","PropTypes","auth","Form","constructor","props","email","password","handleSuccess","bind","handleErrors","handleSubmit","resetForm","onSuccess","reason","onError","event","preventDefault","action","userSession","current","value","then","catch","defaultProps","render","title","propTypes","string","isRequired","func","errors"],"mappings":"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","sourcesContent":["import React, {\n    Component,\n    createRef\n  } from 'react';\n  import PropTypes from 'prop-types';\n  import { auth } from '../firebase';\n  \n  class Form extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.email = createRef();\n      this.password = createRef();\n      this.handleSuccess = this.handleSuccess.bind(this);\n      this.handleErrors = this.handleErrors.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleSuccess() {\n      this.resetForm();\n      this.props.onSuccess && this.props.onSuccess();\n    }\n  \n    handleErrors(reason) {\n      this.props.onError && this.props.onError(reason);\n    }\n  \n    handleSubmit(event) {\n      event.preventDefault();\n      const {\n        email,\n        password,\n        props: { action }\n      } = this;\n  \n      auth.userSession(\n        action,\n        email.current.value,\n        password.current.value\n      ).then(this.handleSuccess).catch(this.handleErrors);\n    }\n  \n    resetForm() {\n      if (!this.email.current || !this.password.current) { return }\n      const { email, password } = Form.defaultProps;\n      this.email.current.value = email;\n      this.password.current.value = password;\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <h1>{this.props.title}</h1>\n          <input\n            name=\"name\"\n            type=\"email\"\n            ref={this.email}\n          />\n          <input\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"none\"\n            ref={this.password}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      )\n    }\n  }\n  \n  Form.propTypes = {\n    title: PropTypes.string.isRequired,\n    action: PropTypes.string.isRequired,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func\n  }\n  \n  Form.defaultProps = {\n    errors: '',\n    email: '',\n    password: ''\n  }\n  \n  export default Form;\n  "]},"metadata":{},"sourceType":"module"}