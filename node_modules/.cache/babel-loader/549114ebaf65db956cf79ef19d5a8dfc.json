{"ast":null,"code":"var _jsxFileName = \"/home/swad/Desktop/my_work/BangladeshBetarFirebase/src/components/Intents.js\";\nimport React, { Component, createRef } from 'react';\nimport { base } from '../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable';\n\nclass Intents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.intentBundle = () => {// const newIntent = this.props.userInfo[`running-intent`].items.filter(item => item.selected === true )\n      // this.props.updateIntent(newIntent)\n    };\n\n    this.createAddProductIntentFormShow = () => this.setState({\n      createAddProductIntentFormVisiable: !this.state.createAddProductIntentFormVisiable\n    });\n\n    this.confirmIntent = () => this.setState({\n      confirmIntentForm: !this.state.confirmIntentForm\n    });\n\n    this.createIntentFormVisible = () => {\n      // console.log(e.target.checked)\n      console.log(this.props.userInfo[\"running-intent\"].items.filter(item => item.selected === true).length);\n      const tmp = this.props.userInfo[\"running-intent\"].items.filter(item => item.selected === true).length;\n\n      if (tmp != 0) {\n        this.setState({\n          createIntentFormVisible: true\n        });\n      } else {\n        this.setState({\n          createIntentFormVisible: false\n        });\n      }\n    };\n\n    this.handleSubmit = () => {\n      console.log(\"hi\");\n    };\n\n    this.state = {\n      products: null,\n      createAddProductIntentFormVisiable: false,\n      createIntentFormVisible: false,\n      confirmIntentForm: false\n    };\n    this.productRef = createRef();\n    this.lastYearRef = createRef();\n    this.nextYearRef = createRef();\n    this.useRef = createRef();\n    this.intentYear = createRef();\n    this.intentName = createRef();\n    this.intentType = createRef();\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"products\", {\n      context: this,\n      state: \"products\"\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.userInfo ? React.createElement(\"div\", {\n      id: \"products\",\n      style: {\n        width: '100%',\n        padding: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        margin: '2px'\n      },\n      title: React.createElement(\"span\", {\n        style: {\n          color: 'rgb(0, 75, 222)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Intents\"),\n      extra: React.createElement(Icon, {\n        style: {\n          color: 'green'\n        },\n        type: \"edit\",\n        key: \"edit\",\n        onClick: this.createAddProductIntentFormShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'center'\n      },\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'rgba(0, 75, 222, 0.5)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Running Intent\"), React.createElement(\"table\", {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      className: \"table table-responsive table-borderless\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, Object.keys(this.props.userInfo[\"running-intent\"].items).length > 0 ? React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Selected\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Product Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Product Model\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Product Manufacturer\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Consumption of Last 2 Year\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Req. of Last 2 Year\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Quantity in Use\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Action\"))) : '', React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, Object.keys(this.props.userInfo[\"running-intent\"].items).map(key => React.createElement(\"tr\", {\n      key: key,\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      key: key,\n      type: \"checkbox\",\n      value: \"yes\",\n      onChange: event => {\n        console.log(event.target.checked);\n        this.props.updateRunningIntentSelected(key, event.target.checked);\n        this.createIntentFormVisible();\n      } //onChange = {this.createIntentFormVisible}\n      ,\n      checked: this.props.userInfo[\"running-intent\"].items[key][\"selected\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.props.userInfo[\"running-intent\"].items[key][\"product-name\"],\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.props.updateRunningIntentProductName(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.props.userInfo[\"running-intent\"].items[key][\"product-model\"],\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.props.updateRunningIntentProductModel(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.props.userInfo[\"running-intent\"].items[key][\"product-manufacturer\"],\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.props.updateRunningIntentProductManufacturer(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.props.userInfo[\"running-intent\"].items[key][\"last-year\"],\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.props.updateRunningIntentLastYear(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.props.userInfo[\"running-intent\"].items[key][\"next-year\"],\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.props.updateRunningIntentNextYear(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(ContentEditable, {\n      html: this.props.userInfo[\"running-intent\"].items[key][\"use\"],\n      \"data-column\": \"item\",\n      className: \"content-editable\",\n      key: key,\n      onChange: event => this.props.updateRunningIntentUse(key, event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        color: 'red'\n      },\n      type: \"delete\",\n      key: \"delete\",\n      onClick: () => this.deleteProduct(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 col-sm-12\",\n      style: {\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, this.state.createIntentFormVisible === true ? React.createElement(\"span\", {\n      style: {\n        color: 'rgba(0, 75, 222, 0.5)',\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.confirmIntent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"confirm Indent\")) : \"\")), React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, Object.keys(this.props.userInfo.intents).map((item, index) => React.createElement(\"li\", {\n      key: index,\n      style: {\n        color: 'rgba(0, 75, 222, .7)'\n      },\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, this.props.userInfo.intents[item].name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'rgba(0, 75, 222, .5)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.props.userInfo.intents[item].type.charAt(0).toUpperCase(), this.props.userInfo.intents[item].type.slice(1)), \"-\", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.props.userInfo.intents[item].year)), React.createElement(\"table\", {\n      style: {\n        color: \"rgba(0, 0, 0, 0.5)\"\n      },\n      className: \"table table-responsive table-borderless\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, Object.keys(this.props.userInfo.intents[item].items).length > 0 ? React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Product Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Product Manufacturer\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Product Model\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Consumption Last 2 Year\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Consumption Next 2 Year\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Quantity in Use\"))) : '', React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, Object.keys(this.props.userInfo.intents[item].items).map(key => React.createElement(\"tr\", {\n      key: key,\n      style: {\n        border: \"1px solid rgba(0, 0, 0, 0.1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, this.props.userInfo.intents[item].items[key][\"product-name\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, this.props.userInfo.intents[item].items[key][\"product-manufacturer\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, this.props.userInfo.intents[item].items[key][\"product-model\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, this.props.userInfo.intents[item].items[key][\"last-year\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, this.props.userInfo.intents[item].items[key][\"next-year\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, this.props.userInfo.intents[item].items[key][\"use\"]))))))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, this.state.confirmIntentForm === true ? React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Indent Type\", React.createElement(\"select\", {\n      className: \"form-control\",\n      ref: this.intentYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Choose Type\"), React.createElement(\"option\", {\n      className: \"dropdown-item\",\n      value: \"yearly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Yearly\"), React.createElement(\"option\", {\n      className: \"dropdown-item\",\n      value: \"emergancy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Emergancy\"), React.createElement(\"option\", {\n      className: \"dropdown-item\",\n      value: \"inter-station\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Inter Station\"))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Name : \", React.createElement(\"input\", {\n      name: \"nextYear\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.intentName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Year: \", React.createElement(\"input\", {\n      name: \"use\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.intentYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Submit\")) : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, this.state.createAddProductIntentFormVisiable === true ? React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        console.log(Object.keys(this.props.userInfo[\"running-intent\"][\"items\"]).length, this.state.products[this.productRef.current.value][\"Name\"], this.state.products[this.productRef.current.value][\"Model\"], this.state.products[this.productRef.current.value][\"Manufacturer\"], this.state.products[this.productRef.current.value][\"Type\"]);\n        this.props.addProductIntent(Object.keys(this.props.userInfo[\"running-intent\"][\"items\"]).length, this.state.products[this.productRef.current.value][\"Name\"], this.state.products[this.productRef.current.value][\"Model\"], this.state.products[this.productRef.current.value][\"Manufacturer\"], this.state.products[this.productRef.current.value][\"Type\"], this.lastYearRef.current.value, this.nextYearRef.current.value, this.useRef.current.value);\n        event.currentTarget.reset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      ref: this.productRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, Object.keys(this.state.products) ? Object.keys(this.state.products).map((item, index) => React.createElement(\"option\", {\n      key: index,\n      value: item,\n      className: \"dropdown-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, this.state.products[item].Type, \"-\", this.state.products[item].Name, \"(\", this.state.products[item].Model, \") -\", this.state.products[item].Manufacturer)) : '')), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"lastYear\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.lastYearRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"nextYear\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.nextYearRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"use\",\n      className: \"form-control\",\n      type: \"text\",\n      autoComplete: \"none\",\n      ref: this.useRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Submit\")) : '')))) : '');\n  }\n\n}\n\nexport default Intents;","map":{"version":3,"sources":["/home/swad/Desktop/my_work/BangladeshBetarFirebase/src/components/Intents.js"],"names":["React","Component","createRef","base","Card","Icon","ContentEditable","Intents","constructor","props","intentBundle","createAddProductIntentFormShow","setState","createAddProductIntentFormVisiable","state","confirmIntent","confirmIntentForm","createIntentFormVisible","console","log","userInfo","items","filter","item","selected","length","tmp","handleSubmit","products","productRef","lastYearRef","nextYearRef","useRef","intentYear","intentName","intentType","componentDidMount","ref","syncState","context","render","width","padding","margin","color","float","Object","keys","border","map","key","event","target","checked","updateRunningIntentSelected","updateRunningIntentProductName","value","updateRunningIntentProductModel","updateRunningIntentProductManufacturer","updateRunningIntentLastYear","updateRunningIntentNextYear","updateRunningIntentUse","deleteProduct","intents","index","name","type","charAt","toUpperCase","slice","year","preventDefault","current","addProductIntent","currentTarget","reset","Type","Name","Model","Manufacturer"],"mappings":"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","sourcesContent":["import React, {Component, createRef} from 'react';\nimport {base} from '../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable'\n\nclass Intents extends Component {\n    constructor(props) {\n        super(props);\n  \n        this.state={\n            products: null,\n            createAddProductIntentFormVisiable:false,\n            createIntentFormVisible: false,\n            confirmIntentForm:false\n        }\n  \n        this.productRef = createRef();\n        this.lastYearRef = createRef();\n        this.nextYearRef = createRef();\n        this.useRef = createRef();\n        this.intentYear = createRef();\n        this.intentName = createRef();\n        this.intentType = createRef();\n    }\n      \n\n    componentDidMount() {\n        this.ref = base.syncState(`products`, {\n            context: this,\n            state: \"products\"\n        });\n    }\n\n    intentBundle = () => {\n        // const newIntent = this.props.userInfo[`running-intent`].items.filter(item => item.selected === true )\n        // this.props.updateIntent(newIntent)\n    }\n    \n    createAddProductIntentFormShow = () => this.setState({createAddProductIntentFormVisiable: !this.state.createAddProductIntentFormVisiable})\n    confirmIntent = () => this.setState({confirmIntentForm: !this.state.confirmIntentForm})\n\n    createIntentFormVisible = () =>{\n        // console.log(e.target.checked)\n        console.log(this.props.userInfo[`running-intent`].items.filter(item => item.selected === true ).length)\n        const tmp = this.props.userInfo[`running-intent`].items.filter(item => item.selected === true ).length\n        if(tmp!=0){\n            this.setState({createIntentFormVisible: true})\n        }else{\n            this.setState({createIntentFormVisible: false})\n        } \n    } \n    handleSubmit = () => {\n        \n        console.log(\"hi\")\n    }\n\n    render() {\n        return  (\n            <>{this.props.userInfo?\n                <div \n                    id=\"products\" \n                    style={{width: '100%', padding: \"25px\"}} \n                >        \n                    <Card\n                        style={{margin: '2px'}} \n                        title={\n                            <span style={{color:'rgb(0, 75, 222)'}}>\n                                Intents\n                            </span>\n                        }\n                        extra={\n                            <Icon \n                                style={{color: 'green'}}\n                                type=\"edit\" \n                                key=\"edit\"\n                                onClick={this.createAddProductIntentFormShow} \n                            />\n                        }\n                    >\n                    \n                        <div style={{float: 'center'}} className='row'>\n                            <div className='col-lg-6 col-md-12 col-sm-12'>\n                                <span style={{color:'rgba(0, 75, 222, 0.5)'}}>Running Intent</span>\n                                \n                                <table \n                                    style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                    className=\"table table-responsive table-borderless\"\n                                >{Object.keys(this.props.userInfo[`running-intent`].items).length>0?\n                                    <thead>\n                                        <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                            <th scope=\"col\">Selected</th>\n                                            <th scope=\"col\">Product Name</th>\n                                            <th scope=\"col\">Product Model</th>\n                                            <th scope=\"col\">Product Manufacturer</th>\n                                            <th scope=\"col\">Consumption of Last 2 Year</th>\n                                            <th scope=\"col\">Req. of Last 2 Year</th>\n                                            <th scope=\"col\">Quantity in Use</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    :''}\n                                    <tbody>{Object.keys(this.props.userInfo[`running-intent`].items).map(key => (\n                                        <tr \n                                            key={key} \n                                            style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                        >\n                                            <td key={key}>\n                                                <input\n                                                    key={key}\n                                                    type=\"checkbox\" \n                                                    value=\"yes\"\n                                                     onChange={(event)=>{\n                                                         console.log(event.target.checked)\n                                                         this.props.updateRunningIntentSelected(key, event.target.checked);\n                                                         this.createIntentFormVisible();\n                                                        }}\n                                                    //onChange = {this.createIntentFormVisible}\n                                                    checked={this.props.userInfo[`running-intent`].items[key][`selected`]}\n                                                />\n                                            </td>\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`product-name`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentProductName(key, event.target.value)}\n                                                />\n                                            </td>\n                                        \n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`product-model`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentProductModel(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`product-manufacturer`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentProductManufacturer(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`last-year`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentLastYear(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`next-year`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentNextYear(key, event.target.value)}\n                                                />\n                                            </td>\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`use`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentUse(key, event.target.value)}\n                                                />\n                                            </td>\n                                    \n                                            <td>\n                                                <Icon\n                                                    style={{color: 'red'}} \n                                                    type=\"delete\" \n                                                    key=\"delete\" \n                                                    onClick={()=>this.deleteProduct(key)}\n                                                />\n                                            </td>\n                                        </tr>        \n                                    ))}</tbody>\n                                    <div className='col-lg-6 col-md-12 col-sm-12' style={{float:'right'}}>\n                                    {\n                                        this.state.createIntentFormVisible === true?\n                                        (<span style={{color:'rgba(0, 75, 222, 0.5)', float:'right'}}>\n                                            <button \n                                                type=\"submit\"\n                                                className=\"btn btn-primary\"\n                                                onClick={this.confirmIntent}\n                                            >\n                                                confirm Indent\n                                            </button>\n                                        </span>):\"\"\n                                    }\n                                    </div>\n                                    \n                                </table>\n                                <ul className=\"list-group\">{\n                                    Object.keys(this.props.userInfo.intents).map((item, index)=> \n                                        <li key={index} style={{color:'rgba(0, 75, 222, .7)'}} className=\"list-group-item\">\n                                            <b>{this.props.userInfo.intents[item].name}</b>\n                                            <p>\n                                                <span style={{color:'rgba(0, 75, 222, .5)'}}>\n                                                    {this.props.userInfo.intents[item].type.charAt(0).toUpperCase()}{this.props.userInfo.intents[item].type.slice(1)}\n                                                </span>-<i>\n                                                    {this.props.userInfo.intents[item].year}\n                                                </i>\n                                            </p>\n\n                                            <table \n                                                style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                                className=\"table table-responsive table-borderless\"\n                                            >{Object.keys(this.props.userInfo.intents[item].items).length>0?\n                                                <thead>\n                                                    <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                                        <th scope=\"col\">Product Name</th>\n                                                        <th scope=\"col\">Product Manufacturer</th>\n                                                        <th scope=\"col\">Product Model</th>\n                                                        <th scope=\"col\">Consumption Last 2 Year</th>\n                                                        <th scope=\"col\">Consumption Next 2 Year</th>\n                                                        <th scope=\"col\">Quantity in Use</th>\n                                                    </tr>\n                                                </thead>\n                                                :''\n                                            }\n                                                <tbody>{Object.keys(this.props.userInfo.intents[item].items).map(key => (\n                                                    <tr \n                                                        key={key} \n                                                        style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                                    >\n                                                        <td>{this.props.userInfo.intents[item].items[key][`product-name`]}</td>\n                                                        <td>{this.props.userInfo.intents[item].items[key][`product-manufacturer`]}</td>\n                                                        <td>{this.props.userInfo.intents[item].items[key][`product-model`]}</td>\n                                                        <td>{this.props.userInfo.intents[item].items[key][`last-year`]}</td>\n                                                        <td>{this.props.userInfo.intents[item].items[key][`next-year`]}</td>\n                                                        <td>{this.props.userInfo.intents[item].items[key][`use`]}</td>\n                                                    </tr>           \n                                                ))}</tbody>\n                                            </table>\n                                        </li>\n                                    )\n                                }</ul>\n                            </div>\n                            <div>\n                                {this.state.confirmIntentForm === true?\n                                <form onSubmit={this.handleSubmit}>\n                                    <div className=\"form-group\">\n                                        Indent Type\n                                        <select className=\"form-control\"  ref={this.intentYear}  >\n                                            <option  className=\"dropdown-item\" >Choose Type</option>\n                                            <option  className=\"dropdown-item\" value=\"yearly\" >Yearly</option>\n                                            <option  className=\"dropdown-item\" value=\"emergancy\">Emergancy</option>\n                                            <option  className=\"dropdown-item\" value=\"inter-station\">Inter Station</option>\n                                        </select>                  \n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        Name : <input\n                                            name=\"nextYear\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.intentName}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        Year: <input\n                                            name=\"use\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.intentYear}\n                                        />\n                                    </div>\n\n                                    <button \n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                    >\n                                        Submit\n                                    </button>\n                                </form>:<h2></h2>\n                                }\n                            </div>\n                            <div className='col-lg-6 col-md-12 col-sm-12'>\n                            {this.state.createAddProductIntentFormVisiable === true?\n                                <form onSubmit={(event)=>{\n                                    event.preventDefault()\n\n                                    console.log( Object.keys(this.props.userInfo[`running-intent`][`items`]).length,\n                                    this.state.products[this.productRef.current.value][`Name`],\n                                    this.state.products[this.productRef.current.value][`Model`],\n                                    this.state.products[this.productRef.current.value][`Manufacturer`],\n                                    this.state.products[this.productRef.current.value][`Type`])\n                                    this.props.addProductIntent(\n                                        Object.keys(this.props.userInfo[`running-intent`][`items`]).length,\n                                        this.state.products[this.productRef.current.value][`Name`],\n                                        this.state.products[this.productRef.current.value][`Model`],\n                                        this.state.products[this.productRef.current.value][`Manufacturer`],\n                                        this.state.products[this.productRef.current.value][`Type`], \n                                        this.lastYearRef.current.value, \n                                        this.nextYearRef.current.value,\n                                        this.useRef.current.value,\n                                    )\n\n                                    event.currentTarget.reset();\n                                }}>\n                                    <div className=\"form-group\">\n                                        <select \n                                            className=\"form-control\" \n                                            ref={this.productRef}\n                                        >{Object.keys(this.state.products)?\n                                        Object.keys(this.state.products).map((item, index)=>\n                                            <option \n                                                key={index} \n                                                value={item} \n                                                className=\"dropdown-item\" \n                                            >\n                                                {this.state.products[item].Type}\n                                                -\n                                                {this.state.products[item].Name} \n                                                ({this.state.products[item].Model})\n                                                -\n                                                {this.state.products[item].Manufacturer}\n                                            </option>)\n                                            :''\n                                        }</select>                  \n                                    </div>\n                                \n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"lastYear\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.lastYearRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"nextYear\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.nextYearRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"use\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.useRef}\n                                        />\n                                    </div>\n\n                                    <button \n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                    >\n                                        Submit\n                                    </button>\n                                </form>\n                                :''\n                            }</div>\n                        </div>\n                    </Card>\n                </div>\n                :''\n            }</>\n        )\n    }\n}\n\n\nexport default Intents"]},"metadata":{},"sourceType":"module"}