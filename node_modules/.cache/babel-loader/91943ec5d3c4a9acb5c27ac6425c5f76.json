{"ast":null,"code":"import _defineProperty from \"/home/swad/Desktop/my_work/BangladeshBetarFirebase/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/swad/Desktop/my_work/BangladeshBetarFirebase/src/components/Dashboard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { base } from '../firebase/firebase';\nimport Stations from './Stations';\nimport Manufactures from './Manufactures';\nimport Products from './Proructs';\nimport Intents from './Intents';\nimport SRB from './SRB';\nimport SIB from './SIB';\nimport Ledger from './Ledger';\n\nclass Dashboard extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.createIntentBundle = (id, intentName, intentType, intentYear, intentList) => {\n      const intentBundle = _objectSpread({}, this.state.intentBundle);\n\n      intentBundle[\"\".concat(id)] = {\n        \"items\": intentList,\n        \"name\": intentName,\n        \"type\": intentType,\n        \"year\": intentYear\n      };\n      this.setState({\n        intentBundle\n      });\n    };\n\n    this.addProductIntent = (id, name, model, manufacturer, type, selected, lastYear, nextYear, use) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)] = {\n        \"product-manufacturer\": manufacturer,\n        \"product-model\": model,\n        \"product-name\": name,\n        \"selected\": selected,\n        \"use\": use,\n        \"last-year\": lastYear,\n        \"next-year\": nextYear\n      };\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentSelected = (id, selected) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"selected\"] = selected;\n      this.setState({\n        userInfo\n      });\n      console.log(\"hi\");\n    };\n\n    this.updateRunningIntentProductManufacturer = (id, manufacturer) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"product-manufacturer\"] = manufacturer;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentProductModel = (id, model) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"product-model\"] = model; // this.setState({userInfo})\n\n      this.setState((state, props) => ({\n        userInfo: state.userInfo + props.userInfo\n      }));\n    };\n\n    this.updateRunningIntentProductName = (id, name) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"product-name\"] = name;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentLastYear = (id, lastYear) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"last-year\"] = lastYear;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentNextYear = (id, nextYear) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"next-year\"] = nextYear;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentUse = (id, use) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"use\"] = use;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateRunningIntentSelected = (id, selected) => {\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo[\"running-intent\"][\"items\"][\"\".concat(id)][\"selected\"] = selected;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.updateIntent = new_intent => {\n      const curr_intent = this.state.userInfo.intents;\n      curr_intent.push(new_intent);\n\n      const userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo['intents'] = curr_intent;\n      this.setState({\n        userInfo\n      });\n    };\n\n    this.state = {\n      userInfo: null,\n      intentBundle: null\n    };\n  }\n\n  componentDidMount() {\n    this.ref = base.syncState(\"users/\".concat(this.props.user.uid), {\n      context: this,\n      state: \"userInfo\"\n    });\n    this.ref = base.syncState(\"users/\".concat(this.props.user.uid, \"/intents\"), {\n      context: this,\n      state: \"intentBundle\"\n    });\n  }\n\n  render() {\n    return this.state.userInfo !== null ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        background: '#007bff',\n        position: 'sticky',\n        top: 0,\n        zIndex: 100\n      },\n      className: \"top-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"nav nav-tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'black'\n      },\n      className: \"nav-link\",\n      href: \"#stations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Stations\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'black'\n      },\n      className: \"nav-link\",\n      href: \"#manufactures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Manufactures\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'black'\n      },\n      className: \"nav-link\",\n      href: \"#products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Products\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'black'\n      },\n      className: \"nav-link\",\n      href: \"#indent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Indent\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'black'\n      },\n      className: \"nav-link\",\n      href: \"#SRB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"SRB\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'black'\n      },\n      className: \"nav-link\",\n      href: \"#SIB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"SIB\")), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'black'\n      },\n      className: \"nav-link\",\n      href: \"#ledger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Ledger\")))), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Stations, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Manufactures, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(Products, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Intents, {\n      userInfo: this.state.userInfo,\n      intentBundle: this.state.intentBundle,\n      addProductIntent: this.addProductIntent,\n      updateRunningIntentSelected: this.state.updateRunningIntentSelected,\n      updateRunningIntentLastYear: this.updateRunningIntentLastYear,\n      updateRunningIntentNextYear: this.updateRunningIntentNextYear,\n      updateRunningIntentProductManufacturer: this.updateRunningIntentProductManufacturer,\n      updateRunningIntentProductModel: this.updateRunningIntentProductModel,\n      updateRunningIntentProductName: this.updateRunningIntentProductName,\n      updateRunningIntentUse: this.updateRunningIntentUse,\n      updateRunningIntentSelected: this.updateRunningIntentSelected,\n      updateIntent: this.updateIntent,\n      createIntentBundle: this.createIntentBundle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(SRB, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(SIB, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(Ledger, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Session Out\");\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/swad/Desktop/my_work/BangladeshBetarFirebase/src/components/Dashboard.js"],"names":["React","Component","base","Stations","Manufactures","Products","Intents","SRB","SIB","Ledger","Dashboard","constructor","props","createIntentBundle","id","intentName","intentType","intentYear","intentList","intentBundle","state","setState","addProductIntent","name","model","manufacturer","type","selected","lastYear","nextYear","use","userInfo","updateRunningIntentSelected","console","log","updateRunningIntentProductManufacturer","updateRunningIntentProductModel","updateRunningIntentProductName","updateRunningIntentLastYear","updateRunningIntentNextYear","updateRunningIntentUse","updateIntent","new_intent","curr_intent","intents","push","componentDidMount","ref","syncState","user","uid","context","render","background","position","top","zIndex","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {base} from '../firebase/firebase';\nimport Stations from './Stations';\nimport Manufactures from './Manufactures';\nimport Products from './Proructs';\nimport Intents from './Intents';\nimport SRB from './SRB'\nimport SIB from './SIB'\nimport Ledger from './Ledger'\n\n\n  class Dashboard extends Component {\n    constructor(props){\n      super(props)\n\n      this.state={\n        userInfo: null,\n        intentBundle: null\n      }\n    }\n    componentDidMount(){\n      this.ref = base.syncState(`users/${this.props.user.uid}`, {\n        context: this,\n        state: \"userInfo\",\n      });\n      this.ref = base.syncState(`users/${this.props.user.uid}/intents`,{\n        context: this,\n        state: \"intentBundle\"\n      })\n    }\n\n    createIntentBundle = (id, intentName, intentType, intentYear, intentList) => {\n      const intentBundle = { ...this.state.intentBundle}\n      intentBundle[`${id}`]={\n        \"items\" : intentList,\n        \"name\"  : intentName,\n        \"type\"  : intentType,\n        \"year\"  : intentYear\n      }\n\n      this.setState({intentBundle})\n    }\n\n    addProductIntent = (\n      id,\n      name,\n      model,\n      manufacturer,\n      type,\n      selected, \n      lastYear, \n      nextYear,\n      use,\n  ) => {\n    const userInfo = { ...this.state.userInfo };\n    userInfo[`running-intent`][`items`][`${id}`]={\n        \"product-manufacturer\" : manufacturer, \n        \"product-model\" :  model,\n        \"product-name\" : name,\n        \"selected\" : selected,\n        \"use\": use,\n        \"last-year\": lastYear,\n        \"next-year\": nextYear\n      };\n    this.setState({ userInfo });\n  };\n\n    updateRunningIntentSelected = (id, selected) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`selected`]=selected;\n      this.setState({userInfo})\n      console.log(\"hi\")\n    }\n\n    updateRunningIntentProductManufacturer = (id, manufacturer) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`product-manufacturer`] = manufacturer;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentProductModel = (id, model) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`product-model`] = model;\n      // this.setState({userInfo})\n      this.setState((state,props)=>({\n        userInfo: state.userInfo + props.userInfo\n      }))\n    }\n\n    updateRunningIntentProductName = (id, name) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`product-name`] = name;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentLastYear = (id, lastYear) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`last-year`] = lastYear;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentNextYear = (id, nextYear) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`next-year`] = nextYear;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentUse = (id, use) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`use`] = use;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentSelected = (id, selected) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`selected`] = selected;\n      this.setState({userInfo})\n    }\n\n    updateIntent = (new_intent) => {\n      const curr_intent = this.state.userInfo.intents\n      curr_intent.push(new_intent)\n\n      const userInfo = {...this.state.userInfo}\n      userInfo['intents'] = curr_intent\n\n      this.setState({userInfo})\n\n    }\n\n    render() {\n      return  (\n        this.state.userInfo!==null?\n        <>\n          <div style={{\n              background:'#007bff',\n              position: 'sticky',\n              top: 0,\n              zIndex: 100\n            }} \n            className=\"top-nav\"\n          >\n            <ul className=\"nav nav-tabs\">\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#stations\">Stations</a>\n              </li>\n\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#manufactures\">Manufactures</a>\n              </li>\n\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#products\">Products</a>\n              </li>\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#indent\">Indent</a>\n              </li>\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#SRB\">SRB</a>\n              </li>\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#SIB\">SIB</a>\n              </li>\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#ledger\">Ledger</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"main\">\n            <Stations />\n            <Manufactures />\n            <Products />\n            <Intents \n              userInfo={this.state.userInfo}\n              intentBundle={this.state.intentBundle}\n              addProductIntent={this.addProductIntent}\n              updateRunningIntentSelected={this.state.updateRunningIntentSelected}\n              updateRunningIntentLastYear={this.updateRunningIntentLastYear}\n              updateRunningIntentNextYear={this.updateRunningIntentNextYear}\n              updateRunningIntentProductManufacturer={this.updateRunningIntentProductManufacturer}\n              updateRunningIntentProductModel={this.updateRunningIntentProductModel}\n              updateRunningIntentProductName={this.updateRunningIntentProductName}\n              updateRunningIntentUse={this.updateRunningIntentUse}\n              updateRunningIntentSelected={this.updateRunningIntentSelected}\n              updateIntent={this.updateIntent}\n              createIntentBundle = {this.createIntentBundle}\n            />\n            <SRB />\n            <SIB />\n            <Ledger />\n          </div>\n        </>:<h1>Session Out</h1>\n      )\n    }\n  }\n  \n  \n  export default Dashboard;\n  "]},"metadata":{},"sourceType":"module"}