{"version":3,"sources":["firebase/firebase.js","firebase/config.js","firebase/auth.js","components/AppProvider.js","shared/Form.js","components/Login.js","components/Signup.js","components/Stations.js","components/Manufactures.js","components/Proructs.js","components/Intents.js","components/Dashboard.js","components/Navbar.js","components/Header.js","components/FlashMessage.js","components/App.js","serviceWorker.js","index.js"],"names":["app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","auth","userSession","action","email","password","logout","signOut","createContext","Provider","Consumer","AppProvider","state","currentUser","defaultProps","message","onAuthStateChanged","user","setState","value","this","destroySession","setMessage","clearMessage","props","children","Component","Form","createRef","handleSuccess","bind","handleErrors","handleSubmit","resetForm","onSuccess","reason","onError","event","preventDefault","current","then","catch","title","onSubmit","className","name","type","ref","autoComplete","errors","withRouter","context","history","push","Stations","createStation","addStation","stationNameRef","stationAddressRef","currentTarget","reset","address","stations","deleteStation","updateStationAddress","Address","createStationFormShow","createStationFormVisible","syncState","id","style","width","padding","margin","color","extra","key","onClick","float","Object","keys","length","border","scope","map","html","data-column","onChange","target","Manufactures","createManufacture","addManufacture","manufactureNameRef","manufactureCountryRef","manufactureAddressRef","country","manufactures","console","log","Country","deleteManufacture","updateManufactureCountry","updateManufactureAddress","createManufactureFormShow","createManufactureFormVisible","Products","addProduct","manufacturer","model","srNo","symbolNo","products","Manufacturer","Model","Name","SrNo","SymbolNo","Type","deleteProduct","updateProductManufacturer","updateProductModel","updateProductName","updateProductSrNo","updateProductSymbolNo","createProductFormShow","createProductFormVisible","manufacturerSelectOptionShow","manufacturerSelectOptionVisiable","dropDown","persist","item","index","selected","instrumnet","parts","productManufacturerRef","productModelRef","productNameRef","productSrNoRef","productSymbolNoRef","productTypeRef","parseInt","Intents","userInfo","items","updateRunningIntentProductName","updateRunningIntentProductModel","updateRunningIntentProductManufacturer","updateRunningIntentLastYear","updateRunningIntentNextYear","updateRunningIntentUse","intents","charAt","toUpperCase","slice","year","Dashboard","lastYear","nextYear","use","updateRunningIntentSelected","uid","background","position","top","zIndex","href","Navbar","handleLogout","boxShadow","Meta","description","fontSize","fontFamily","textShadow","placement","closable","onClose","onCloseNavbar","visible","visibleNavbar","to","left","bottom","display","flexDirection","justifyContent","alignItems","React","Header","backgroundColor","showNavbar","borderRadius","height","aria-hidden","FlashMessage","paddingTop","role","aria-label","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a2045d0.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport Rebase from \"re-base\";\nimport { devConfig } from './config';\n\nconst app = firebase.initializeApp(devConfig);\nconst base = Rebase.createClass(app.database());\nconst auth = app.auth();\n\nexport {\n  auth,\n  base\n}","\n\nconst devConfig = {\n  apiKey: \"AIzaSyBeZKvGgrTa7BhHEtm_Ma3AuI8h7_WHcjo\",\n  authDomain: \"bangladesh-betar-v1.firebaseapp.com\",\n  databaseURL: \"https://bangladesh-betar-v1.firebaseio.com\",\n  projectId: \"bangladesh-betar-v1\",\n  storageBucket: \"bangladesh-betar-v1.appspot.com\",\n  messagingSenderId: \"844112875143\",\n  appId: \"1:844112875143:web:5ac2e0662c6e80b2\"\n\n  };\n  \n  const prodConfig = {\n    apiKey: \"YOUR_API_KEY\",\n    authDomain: \"AUTH_DOMAIN\",\n    databaseURL: \"DATABASE_URL\",\n    projectId: \"PROJECT_ID\",\n    storageBucket: \"STORAGE_BUCKET\",\n    messagingSenderId: \"MESSAGING_SENDER_ID\"\n  };\n  \n  export {\n    devConfig,\n    prodConfig\n  }\n  ","import { auth } from './firebase';\n\n/**\n * Create user session\n * @param {string} action - createUser, signIn\n * @param {string} email \n * @param {string} password \n */\nconst userSession = (action, email, password) => auth[`${action}WithEmailAndPassword`](email, password);\n\n/**\n * Destroy current user session\n */\nconst logout = () => auth.signOut();\n\nexport {\n  userSession,\n  logout\n}\n","import React, {\n    Component,\n    createContext\n  } from 'react';\n  import { firebase } from '../firebase';\n  \n  export const {\n    Provider,\n    Consumer\n  } = createContext();\n  \n  class AppProvider extends Component {\n    state = {\n      currentUser: AppProvider.defaultProps.currentUser,\n      message: AppProvider.defaultProps.message\n    }\n  \n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(user => \n          user && this.setState({\n          currentUser: user\n        })\n      )\n    }\n  \n    render() {\n      return (\n        <Provider value={{\n          state: this.state,\n          destroySession: () => this.setState({ \n            currentUser: AppProvider.defaultProps.currentUser \n          }),\n          setMessage: message => this.setState({ message }),\n          clearMessage: () => this.setState({ \n            message: AppProvider.defaultProps.message \n          })\n        }}>\n          {this.props.children}\n        </Provider>\n      )\n    }\n  }\n  \n  AppProvider.defaultProps = {\n    currentUser: null,\n    message: null\n  }\n  \n  export default AppProvider;\n  ","import React, {\n    Component,\n    createRef\n  } from 'react';\n  import PropTypes from 'prop-types';\n  import { auth } from '../firebase';\n  \n  class Form extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.email = createRef();\n      this.password = createRef();\n      this.handleSuccess = this.handleSuccess.bind(this);\n      this.handleErrors = this.handleErrors.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleSuccess() {\n      this.resetForm();\n      this.props.onSuccess && this.props.onSuccess();\n    }\n  \n    handleErrors(reason) {\n      this.props.onError && this.props.onError(reason);\n    }\n  \n    handleSubmit(event) {\n      event.preventDefault();\n      const {\n        email,\n        password,\n        props: { action }\n      } = this;\n  \n      auth.userSession(\n        action,\n        email.current.value,\n        password.current.value\n      ).then(this.handleSuccess).catch(this.handleErrors);\n    }\n  \n    resetForm() {\n      if (!this.email.current || !this.password.current) { return }\n      const { email, password } = Form.defaultProps;\n      this.email.current.value = email;\n      this.password.current.value = password;\n    }\n  \n    render() {\n      return (\n        <>\n        <h3>{this.props.title}</h3>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n          <input\n            name=\"name\"\n            className=\"form-control\"\n            type=\"email\"\n            ref={this.email}\n          />\n          </div>\n          <div className=\"form-group\">\n          <input\n            name=\"password\"\n            className=\"form-control\"\n            type=\"password\"\n            autoComplete=\"none\"\n            ref={this.password}\n          />\n          </div>\n          <button \n            type=\"submit\"\n            className=\"btn btn-primary\"\n          >Submit</button>\n        </form>\n        </>\n      )\n    }\n  }\n  \n  Form.propTypes = {\n    title: PropTypes.string.isRequired,\n    action: PropTypes.string.isRequired,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func\n  }\n  \n  Form.defaultProps = {\n    errors: '',\n    email: '',\n    password: ''\n  }\n  \n  export default Form;\n  ","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Form from '../shared/Form';\nimport { Consumer } from './AppProvider';\nimport { Card } from 'antd';\n\nconst Login = props => <Consumer>\n  {({ state, ...context }) => (\n    <div className=\"main\">\n      <Card>\n        <Form\n          action=\"signIn\"\n          title=\"Login\"\n          onSuccess={() => props.history.push('/dashboard')}\n          onError={({ message }) => context.setMessage(`Login failed: ${message}`)}\n        />\n      </Card>\n    </div>\n  )}\n</Consumer>;\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Form from '../shared/Form';\nimport { auth } from '../firebase';\nimport { Consumer } from './AppProvider';\n\nconst Signup = props => <Consumer>\n  {({ state, ...context }) => (\n    <Form\n      action=\"createUser\"\n      title=\"Create account\"\n      onSuccess={() => auth.logout().then(() => {\n        context.destroySession();\n        context.clearMessage();\n        props.history.push('/accountCreated');\n      })}\n      onError={({ message }) => context.setMessage(`Error occured: ${message}`)}\n    />\n  )}\n</Consumer>;\n\nexport default withRouter(Signup);\n","import React, {Component, createRef} from 'react';\nimport {base} from './../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable'\n\n  class Stations extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state={\n          stations: null,\n          createStationFormVisible: false\n      }\n\n      this.stationNameRef = createRef();\n      this.stationAddressRef = createRef();\n    }\n    \n    componentDidMount() {\n      this.ref = base.syncState(`stations`, {\n        context: this,\n        state: \"stations\"\n      });\n    }\n\n    createStation = event => {\n      event.preventDefault();\n      this.addStation(this.stationNameRef.current.value, this.stationAddressRef.current.value);\n      event.currentTarget.reset();\n    };\n\n    addStation = (name, address) => {\n      const stations = { ...this.state.stations };\n      stations[`${name}`] =  {'Address': address};\n      this.setState({ stations });\n    };\n\n    deleteStation = name => {\n      const stations = {...this.state.stations}\n      stations[`${name}`] = null;\n      this.setState({stations})\n    }\n\n    updateStationAddress = (name, address) => {\n      const stations = {...this.state.stations}\n      stations[`${name}`] = {Address: address};\n      this.setState({stations})\n    }\n\n    createStationFormShow = () => this.setState({createStationFormVisible:!this.state.createStationFormVisible})\n  \n    render() {\n        return  (\n            <>{this.state.stations?\n                <div \n                    id=\"stations\" \n                    style={{width: '100%', padding: \"0 25px\"}} \n                >        \n                    <Card\n                        style={{margin: '2px'}} \n                        title={<span style={{color:'rgb(0, 75, 222)'}}>Stations</span>}\n                        extra={\n                            <Icon \n                                style={{color: 'green'}} \n                                type=\"edit\" \n                                key=\"edit\" \n                                onClick={this.createStationFormShow}\n                            />\n                        }\n                    >\n                    \n                        <div style={{float: 'center'}} className='row'>\n                            <div className='col-lg-6 col-md-12 col-sm-12'>\n                                <table \n                                    style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                    className=\"table table-responsive table-borderless\"\n                                >{Object.keys(this.state.stations).length>0?\n                                    <thead>\n                                        <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                            <th scope=\"col\">Station Name</th>\n                                            <th scope=\"col\">Address</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    :''\n                                }\n                                    <tbody>{Object.keys(this.state.stations).map(key => (\n                                        <tr \n                                            key={key} \n                                            style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                        >\n                                            <td>{key}</td>\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.stations[key].Address}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateStationAddress(key, event.target.value)}\n                                                />\n                                            </td>\n                                            <td>\n                                                <Icon \n                                                    style={{color: 'red'}} \n                                                    type=\"delete\" \n                                                    key=\"delete\" \n                                                    onClick={()=>this.deleteStation(key)}\n                                                />\n                                            </td>\n                                        </tr>           \n                                    ))}</tbody>\n                                </table>\n                            </div>\n\n                            <div className='col-lg-6 col-md-12 col-sm-12'>{this.state.createStationFormVisible === true?\n                                <form onSubmit={this.createStation}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"stationName\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            ref={this.stationNameRef}\n                                        />\n                                    </div>\n                                \n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"stationAddress\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.stationAddressRef}\n                                        />\n                                    </div>\n                                \n                                    <button \n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                    >\n                                        Submit\n                                    </button>\n                                </form>\n                                :''\n                            }</div>\n                        </div>\n                    </Card>\n                </div>\n                :''\n            }</>\n        )\n    }\n}\n\n\nexport default Stations","import React, {Component, createRef} from 'react';\nimport {base} from '../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable'\n\n  class Manufactures extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state={\n          manufactures: null,\n          createManufactureFormVisible: false\n      }\n\n      this.manufactureNameRef = createRef();\n      this.manufactureCountryRef = createRef();\n      this.manufactureAddressRef = createRef();\n    }\n    \n    componentDidMount() {\n      this.ref = base.syncState(`manufactures`, {\n        context: this,\n        state: \"manufactures\"\n      });\n    }\n\n    createManufacture = event => {\n      event.preventDefault();\n      this.addManufacture(this.manufactureNameRef.current.value, this.manufactureCountryRef.current.value, this.manufactureAddressRef.current.value);\n      event.currentTarget.reset();\n    };\n\n    addManufacture = (name, country, address) => {\n      const manufactures = { ...this.state.manufactures };\n      console.log(country, address)\n      manufactures[`${name}`]={Country : country, Address :  address};\n      this.setState({ manufactures });\n    };\n\n    deleteManufacture = name => {\n      const manufactures = {...this.state.manufactures}\n      console.log(manufactures[`${name}`])\n      manufactures[`${name}`] = null;\n      this.setState({manufactures})\n    }\n\n    updateManufactureCountry = (name, country) => {\n      const manufactures = {...this.state.manufactures}\n      console.log(manufactures[`${name}`])\n      manufactures[`${name}`].Country = country;\n      this.setState({manufactures})\n    }\n\n    updateManufactureAddress = (name, address) => {\n        const manufactures = {...this.state.manufactures}\n        console.log(manufactures[`${name}`])\n        manufactures[`${name}`].Address = address;\n        this.setState({manufactures})\n    }\n\n    createManufactureFormShow = () => this.setState({createManufactureFormVisible:!this.state.createManufactureFormVisible})\n  \n    render() {\n        return  (\n            <>{this.state.manufactures?\n                <div \n                    id=\"manufactures\" \n                    style={{width: '100%', padding: \"25px\"}} \n                >        \n                    <Card\n                        style={{margin: '2px'}} \n                        title={<span style={{color:'rgb(0, 75, 222)'}}>Manufactures</span>}\n                        extra={\n                            <Icon \n                                style={{color: 'green'}}\n                                type=\"edit\" \n                                key=\"edit\" \n                                onClick={this.createManufactureFormShow}\n                            />\n                        }\n                    >\n                    \n                        <div style={{float: 'center'}} className='row'>\n                            <div className='col-lg-6 col-md-12 col-sm-12'>\n                                <table \n                                    style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                    className=\"table table-responsive table-borderless\"\n                                >{Object.keys(this.state.manufactures).length>0?\n                                    <thead>\n                                        <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                            <th scope=\"col\">Manufactures Name</th>\n                                            <th scope=\"col\">Country</th>\n                                            <th scope=\"col\">Address</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    :''\n                                }\n                                    <tbody>{Object.keys(this.state.manufactures).map(key => (\n                                        <tr \n                                            key={key} \n                                            style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                        >\n                                            <td>{key}</td>\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.manufactures[key].Country}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateManufactureCountry(key, event.target.value)}\n                                                />\n                                            </td>\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.manufactures[key].Address}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateManufactureAddress(key, event.target.value)}\n                                                />\n                                            </td>\n                                            <td>\n                                                <Icon\n                                                    style={{color: 'red'}} \n                                                    type=\"delete\" \n                                                    key=\"delete\" \n                                                    onClick={()=>this.deleteManufacture(key)}\n                                                />\n                                            </td>\n                                        </tr>           \n                                    ))}</tbody>\n                                </table>\n                            </div>\n\n                            <div className='col-lg-6 col-md-12 col-sm-12'>{this.state.createManufactureFormVisible === true?\n                                <form onSubmit={this.createManufacture}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"manufactureName\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            ref={this.manufactureNameRef}\n                                        />\n                                    </div>\n                                \n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"manufactureCountry\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.manufactureCountryRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"manufactureAddress\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.manufactureAddressRef}\n                                        />\n                                    </div>\n                                \n                                    <button \n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                    >\n                                        Submit\n                                    </button>\n                                </form>\n                                :''\n                            }</div>\n                        </div>\n                    </Card>\n                </div>\n                :''\n            }</>\n        )\n    }\n}\n\n\nexport default Manufactures","import React, {Component, createRef} from 'react';\nimport {base} from '../firebase/firebase';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable'\n\n  class Products extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state={\n          products: null,\n          instrumnet: null,\n          parts: null,\n          manufactures: null,\n          createProductFormVisible: false,\n          manufacturerSelectOptionVisiable: false,\n      }\n\n      this.productManufacturerRef = createRef();\n      this.productModelRef = createRef();\n      this.productNameRef = createRef();\n      this.productSrNoRef = createRef();\n      this.productSymbolNoRef = createRef();\n      this.productTypeRef = createRef()\n    }\n    \n    componentDidMount() {\n        this.ref = base.syncState(`products`, {\n            context: this,\n            state: \"products\"\n        });\n\n        this.ref = base.syncState(`manufactures`, {\n            context: this,\n            state: \"manufactures\"\n        });\n    }\n\n    addProduct = (\n        id,\n        manufacturer, \n        model, \n        name, \n        srNo,\n        symbolNo,\n        type\n    ) => {\n      const products = { ...this.state.products };\n      products[`${id}`]={\n          Manufacturer : manufacturer, \n          Model :  model,\n          Name : name,\n          SrNo : srNo,\n          SymbolNo: symbolNo,\n          Type: type\n        };\n      this.setState({ products });\n    };\n\n    deleteProduct = id => {\n      const products = {...this.state.products}\n      products[`${id}`] = null;\n      this.setState({products})\n    }\n\n    updateProductManufacturer = (id, manufacturer) => {\n      const products = {...this.state.products}\n      products[`${id}`].Manufacturer = manufacturer;\n      this.setState({products})\n    }\n\n    updateProductModel = (id, model) => {\n        const products = {...this.state.products}\n        products[`${id}`].Model = model;\n        this.setState({products})\n    }\n\n\n    updateProductName = (id, name) => {\n        const products = {...this.state.products}\n        products[`${id}`].Name = name;\n        this.setState({products})\n    }\n\n    updateProductSrNo = (id, srNo) => {\n        const products = {...this.state.products}\n        products[`${id}`].SrNo = srNo;\n        this.setState({products})\n    }\n\n    updateProductSymbolNo = (id, symbolNo) => {\n        const products = {...this.state.products}\n        products[`${id}`].SymbolNo = symbolNo;\n        this.setState({products})\n    }\n\n    createProductFormShow = () => this.setState({createProductFormVisible: !this.state.createProductFormVisible})\n    manufacturerSelectOptionShow = () => this.setState({manufacturerSelectOptionVisiable: !this.state.manufacturerSelectOptionVisiable})\n\n    dropDown = (key, manufacturer) => \n        <select \n            className=\"form-control form-control-sm\" \n            onChange={(event)=>{\n                event.persist()\n                this.updateProductManufacturer(key, event.target.value)\n            }}\n        >{Object.keys(this.state.manufactures)?\n        Object.keys(this.state.manufactures).map((item, index)=>\n        item === manufacturer? \n            <option selected key={index} value={item} className=\"dropdown-item\" >\n                {item}\n            </option>\n            :<option key={index} value={item} className=\"dropdown-item\" >\n                {item}\n            </option>)\n            :''\n        }</select>\n    render() {\n        return  (\n            <>{this.state.products?\n                <div \n                    id=\"products\" \n                    style={{width: '100%', padding: \"25px\"}} \n                >        \n                    <Card\n                        style={{margin: '2px'}} \n                        title={\n                            <span style={{color:'rgb(0, 75, 222)'}}>\n                                Products\n                            </span>\n                        }\n                        extra={\n                            <Icon \n                                style={{color: 'green'}}\n                                type=\"edit\" \n                                key=\"edit\" \n                                onClick={this.createProductFormShow}\n                            />\n                        }\n                    >\n                    \n                        <div style={{float: 'center'}} className='row'>\n                            <div className='col-lg-6 col-md-12 col-sm-12'>\n                                <span style={{color:'rgba(0, 75, 222, 0.5)'}}>Parts</span>\n                                <table \n                                    style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                    className=\"table table-responsive table-borderless\"\n                                >{Object.keys(this.state.products).length>0?\n                                    <thead>\n                                        <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                            <th scope=\"col\">Manufacturer</th>\n                                            <th scope=\"col\">Model</th>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">SrNo</th>\n                                            <th scope=\"col\">SymbolNo</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    :''}\n                                    <tbody>{Object.keys(this.state.products).map(key => (\n                                        this.state.products[key].Type === 'Parts'?\n                                        <tr \n                                            key={key} \n                                            style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                        >\n                                            <td onClick={()=>this.manufacturerSelectOptionShow()}>{\n                                                this.state.manufacturerSelectOptionVisiable===true? \n                                                this.dropDown(key, this.state.products[key].Manufacturer)\n                                                :this.state.products[key].Manufacturer\n                                            }</td>\n                                                \n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].Model}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductModel(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].Name}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductName(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].SrNo}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductSrNo(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].SymbolNo}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductSymbolNo(key, event.target.value)}\n                                                />\n                                            </td>\n                                            \n                                            <td>\n                                                <Icon\n                                                    style={{color: 'red'}} \n                                                    type=\"delete\" \n                                                    key=\"delete\" \n                                                    onClick={()=>this.deleteProduct(key)}\n                                                />\n                                            </td>\n                                        </tr>\n                                        :null           \n                                    ))}</tbody>\n                                </table>\n\n\n                                <span style={{color:'rgba(0, 75, 222, 0.5)'}}>Instrument</span>\n                                <table \n                                    style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                    className=\"table table-responsive table-borderless\"\n                                >{Object.keys(this.state.products).length>0?\n                                    <thead>\n                                        <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                            <th scope=\"col\">Manufacturer</th>\n                                            <th scope=\"col\">Model</th>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">SrNo</th>\n                                            <th scope=\"col\">SymbolNo</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    :''}\n                                    <tbody>{Object.keys(this.state.products).map(key => (\n                                        this.state.products[key].Type === 'Instrument'?\n                                        <tr \n                                            key={key} \n                                            style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                        >\n                                            <td onClick={()=>this.manufacturerSelectOptionShow()}>{\n                                                this.state.manufacturerSelectOptionVisiable===true? \n                                                    this.dropDown(key, this.state.products[key].Manufacturer)\n                                                    :this.state.products[key].Manufacturer\n                                            }</td>\n                                        \n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].Model}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductModel(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].Name}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductName(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].SrNo}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductSrNo(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.state.products[key].SymbolNo}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.updateProductSymbolNo(key, event.target.value)}\n                                                />\n                                            </td>\n                                    \n                                            <td>\n                                                <Icon\n                                                    style={{color: 'red'}} \n                                                    type=\"delete\" \n                                                    key=\"delete\" \n                                                    onClick={()=>this.deleteProduct(key)}\n                                                />\n                                            </td>\n                                        </tr>\n                                        :null           \n                                    ))}</tbody>\n                                </table>\n                            </div>\n\n                            <div className='col-lg-6 col-md-12 col-sm-12'>{this.state.createProductFormVisible === true?\n                                <form onSubmit={(event)=>{\n                                    event.preventDefault()\n\n                                    this.addProduct(\n                                        parseInt(Object.keys(this.state.products)[Object.keys(this.state.products).length-1])+1,\n                                        this.productManufacturerRef.current.value, \n                                        this.productModelRef.current.value, \n                                        this.productNameRef.current.value,\n                                        this.productSrNoRef.current.value,\n                                        this.productSymbolNoRef.current.value,\n                                        this.productTypeRef.current.value\n                                    )\n\n                                    event.currentTarget.reset();\n                                }}>\n                                    <div className=\"form-group\">\n                                        <select \n                                            className=\"form-control\" \n                                            ref={this.productManufacturerRef}\n                                        >{Object.keys(this.state.manufactures)?\n                                        Object.keys(this.state.manufactures).map((item, index)=>\n                                            <option \n                                                key={index} \n                                                value={item} \n                                                className=\"dropdown-item\" \n                                            >\n                                                {item}\n                                            </option>)\n                                            :''\n                                        }</select>                  \n                                    </div>\n                                \n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productModel\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productModelRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productName\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productNameRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productSrNo\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productSrNoRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            name=\"productSymbolNo\"\n                                            className=\"form-control\"\n                                            type=\"text\"\n                                            autoComplete=\"none\"\n                                            ref={this.productSymbolNoRef}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <select \n                                            className=\"form-control\" \n                                            ref={this.productTypeRef}\n                                        >\n                                            <option \n                                                key='1' \n                                                value='Parts'\n                                                className=\"dropdown-item\" \n                                            >\n                                                Parts\n                                            </option>\n\n                                            <option \n                                                key='2' \n                                                value='Instrument' \n                                                className=\"dropdown-item\" \n                                            >\n                                                Instrument\n                                            </option>\n                                        </select> \n                                    </div>\n                                \n                                    <button \n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                    >\n                                        Submit\n                                    </button>\n                                </form>\n                                :''\n                            }</div>\n                        </div>\n                    </Card>\n                </div>\n                :''\n            }</>\n        )\n    }\n}\n\n\nexport default Products","import React, {Component} from 'react';\nimport { Card, Icon } from 'antd';\nimport ContentEditable from 'react-contenteditable'\n\nclass Intents extends Component {\n    render() {\n        return  (\n            <>{this.props.userInfo?\n                <div \n                    id=\"products\" \n                    style={{width: '100%', padding: \"25px\"}} \n                >        \n                    <Card\n                        style={{margin: '2px'}} \n                        title={\n                            <span style={{color:'rgb(0, 75, 222)'}}>\n                                Intents\n                            </span>\n                        }\n                        extra={\n                            <Icon \n                                style={{color: 'green'}}\n                                type=\"edit\" \n                                key=\"edit\" \n                            />\n                        }\n                    >\n                    \n                        <div style={{float: 'center'}} className='row'>\n                            <div className='col-lg-6 col-md-12 col-sm-12'>\n                                <span style={{color:'rgba(0, 75, 222, 0.5)'}}>Running Intent</span>\n                                <table \n                                    style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                    className=\"table table-responsive table-borderless\"\n                                >{Object.keys(this.props.userInfo[`running-intent`].items).length>0?\n                                    <thead>\n                                        <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                            <th scope=\"col\">Product Name</th>\n                                            <th scope=\"col\">Product Model</th>\n                                            <th scope=\"col\">Product Manufacturer</th>\n                                            <th scope=\"col\">Consumption of Last 2 Year</th>\n                                            <th scope=\"col\">Req. of Last 2 Year</th>\n                                            <th scope=\"col\">Quantity in Use</th>\n                                            <th scope=\"col\">Action</th>\n                                        </tr>\n                                    </thead>\n                                    :''}\n                                    <tbody>{Object.keys(this.props.userInfo[`running-intent`].items).map(key => (\n                                        <tr \n                                            key={key} \n                                            style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                        >\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`product-name`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentProductName(key, event.target.value)}\n                                                />\n                                            </td>\n                                        \n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`product-model`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentProductModel(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`product-manufacturer`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentProductManufacturer(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`last-year`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentLastYear(key, event.target.value)}\n                                                />\n                                            </td>\n\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`next-year`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentNextYear(key, event.target.value)}\n                                                />\n                                            </td>\n                                            <td>\n                                                <ContentEditable\n                                                    html={this.props.userInfo[`running-intent`].items[key][`use`]}\n                                                    data-column=\"item\"\n                                                    className=\"content-editable\"\n                                                    key={key}\n                                                    onChange={(event)=>this.props.updateRunningIntentUse(key, event.target.value)}\n                                                />\n                                            </td>\n                                    \n                                            <td>\n                                                <Icon\n                                                    style={{color: 'red'}} \n                                                    type=\"delete\" \n                                                    key=\"delete\" \n                                                    onClick={()=>this.deleteProduct(key)}\n                                                />\n                                            </td>\n                                        </tr>        \n                                    ))}</tbody>\n                                </table>\n\n                                <ul className=\"list-group\">{\n                                    Object.keys(this.props.userInfo.intents).map(item=> \n                                        <li style={{color:'rgba(0, 75, 222, .7)'}} className=\"list-group-item\">\n                                            <b>{this.props.userInfo.intents[item].name}</b>\n                                            <p>\n                                                <span style={{color:'rgba(0, 75, 222, .5)'}}>\n                                                    {this.props.userInfo.intents[item].type.charAt(0).toUpperCase()}{this.props.userInfo.intents[item].type.slice(1)}\n                                                </span>-<i>\n                                                    {this.props.userInfo.intents[item].year}\n                                                </i>\n                                            </p>\n\n                                            <table \n                                                style={{color: \"rgba(0, 0, 0, 0.5)\"}} \n                                                className=\"table table-responsive table-borderless\"\n                                            >{Object.keys(this.props.userInfo.intents[item].items).length>0?\n                                                <thead>\n                                                    <tr style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}>\n                                                        <th scope=\"col\">Product Name</th>\n                                                        <th scope=\"col\">Product Manufacturer</th>\n                                                        <th scope=\"col\">Product Model</th>\n                                                        <th scope=\"col\">Consumption Last 2 Year</th>\n                                                        <th scope=\"col\">Consumption Next 2 Year</th>\n                                                        <th scope=\"col\">Quantity in Use</th>\n                                                    </tr>\n                                                </thead>\n                                                :''\n                                            }\n                                                <tbody>{Object.keys(this.props.userInfo.intents[item].items).map(key => (\n                                                    <tr \n                                                        key={key} \n                                                        style={{border: \"1px solid rgba(0, 0, 0, 0.1)\"}}\n                                                    >\n                                                        <td>{this.props.userInfo.intents[item].items[key][`product-name`]}</td>\n                                                        <td>{this.props.userInfo.intents[item].items[key][`product-manufacturer`]}</td>\n                                                        <td>{this.props.userInfo.intents[item].items[key][`product-model`]}</td>\n                                                        <td>{this.props.userInfo.intents[item].items[key][`last-year`]}</td>\n                                                        <td>{this.props.userInfo.intents[item].items[key][`next-year`]}</td>\n                                                        <td>{this.props.userInfo.intents[item].items[key][`use`]}</td>\n                                                    </tr>           \n                                                ))}</tbody>\n                                            </table>\n                                        </li>\n                                    )\n                                }</ul>\n                            </div>\n\n                            <div className='col-lg-6 col-md-12 col-sm-12'></div>\n                        </div>\n                    </Card>\n                </div>\n                :''\n            }</>\n        )\n    }\n}\n\n\nexport default Intents","import React, {Component} from 'react';\nimport {base} from '../firebase/firebase';\nimport Stations from './Stations';\nimport Manufactures from './Manufactures';\nimport Products from './Proructs';\nimport Intents from './Intents';\n\n\n  class Dashboard extends Component {\n    constructor(props){\n      super(props)\n\n      this.state={\n        userInfo: null\n      }\n    }\n    componentDidMount(){\n      this.ref = base.syncState(`users/${this.props.user.uid}`, {\n        context: this,\n        state: \"userInfo\"\n      });\n    }\n\n    updateRunningIntentProductManufacturer = (id, manufacturer) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`product-manufacturer`] = manufacturer;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentProductModel = (id, model) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`product-model`] = model;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentProductName = (id, name) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`product-name`] = name;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentLastYear = (id, lastYear) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`last-year`] = lastYear;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentNextYear = (id, nextYear) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`next-year`] = nextYear;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentUse = (id, use) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`use`] = use;\n      this.setState({userInfo})\n    }\n\n    updateRunningIntentSelected = (id, selected) => {\n      const userInfo = {...this.state.userInfo}\n      userInfo[`running-intent`][`items`][`${id}`][`selected`] = selected;\n      this.setState({userInfo})\n    }\n\n    render() {\n      console.log(this.state.userInfo)\n      return  (\n        <>\n          <div style={{\n              background:'#007bff',\n              position: 'sticky',\n              top: 0,\n              zIndex: 100\n            }} \n            className=\"top-nav\"\n          >\n            <ul className=\"nav nav-tabs\">\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#stations\">Stations</a>\n              </li>\n\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#manufactures\">Manufactures</a>\n              </li>\n\n              <li className=\"nav-item\">\n                <a style={{color: 'black'}} className=\"nav-link\" href=\"#products\">Products</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"main\">\n            <Stations />\n            <Manufactures />\n            <Products />\n            <Intents \n              userInfo={this.state.userInfo}\n\n              updateRunningIntentLastYear={this.updateRunningIntentLastYear}\n              updateRunningIntentNextYear={this.updateRunningIntentNextYear}\n              updateRunningIntentProductManufacturer={this.updateRunningIntentProductManufacturer}\n              updateRunningIntentProductModel={this.updateRunningIntentProductModel}\n              updateRunningIntentProductName={this.updateRunningIntentProductName}\n              updateRunningIntentUse={this.updateRunningIntentUse}\n              updateRunningIntentSelected={this.updateRunningIntentSelected}\n            />\n          </div>\n        </>\n      )\n    }\n  }\n  \n  \n  export default Dashboard;\n  ","import React from 'react';\nimport {\n  Link,\n  withRouter\n} from 'react-router-dom';\nimport { auth } from '../firebase';\nimport { Consumer } from './AppProvider';\n\nimport { Drawer, Card} from 'antd';\n\n\nclass Navbar extends React.Component{\n  handleLogout = context => {\n    auth.logout();\n    context.destroySession();\n    this.props.history.push('/signedOut');\n  };\n\n  render(){\n    return (\n      <Consumer>{({ state, ...context }) => (\n        <Drawer\n          title={state.currentUser?\n            <Card style={{boxShadow: '-1px -3px 5px #00000085',}}>\n              <Card.Meta description={state.currentUser.email} />\n            </Card>\n            :<span style={{\n              fontSize: '35px',\n              fontFamily: 'Cookie, cursive',\n              textShadow: '-1px -3px 5px black',\n              color: 'white'\n            }}>\n              Menu\n            </span>\n          }\n          placement=\"left\"\n          closable={false}\n          onClose={this.props.onCloseNavbar}\n          visible={this.props.visibleNavbar}\n        >{\n          state.currentUser?\n          <>\n            <ul className=\"list-group\">\n              <Link to=\"/dashboard\">\n                <li className=\"list-group-item\">\n                  Dashboard\n                </li>\n              </Link>\n            </ul>\n            <div\n              style={{\n                position: 'absolute',\n                left: 0,\n                bottom: 0,\n                width: '100%',\n              }}\n            >\n              <ul style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  alignItems: 'stretch'\n                }}\n                className=\"list-group list-group-horizontal\"\n              >\n                <li className=\"list-group-item\">\n                  <span onClick={() => this.handleLogout(context)}>\n                    Logout\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </>:\n          <>\n            <ul className=\"list-group\">\n              <Link to=\"/\"><li className=\"list-group-item\">Home</li></Link>\n            </ul>\n            <div\n              style={{\n                position: 'absolute',\n                left: 0,\n                bottom: 0,\n                width: '100%',\n              }}\n            >\n              <ul style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  alignItems: 'stretch'\n                }}\n                className=\"list-group list-group-horizontal\"\n              >\n                <Link to=\"/login\">\n                  <li className=\"list-group-item\">\n                    Login\n                  </li>\n                </Link>\n                <Link to=\"/signup\">\n                  <li className=\"list-group-item\">\n                    Create Account\n                  </li>\n                </Link>\n              </ul>\n            </div>\n          </>\n        }</Drawer>\n      )}</Consumer>\n    )\n  }\n};\n\nexport default withRouter(Navbar);\n","import React from 'react';\nimport { Consumer } from './AppProvider';\n\nclass Header extends React.Component{\n    render(){\n        return(\n            <Consumer>{({ state, ...context }) => (\n                // state.currentUser && this.props.role?\n                    <nav \n                        style={{backgroundColor: '#02007f'}}\n                        className=\"navbar navbar-dark\"\n                    >\n                         \n                        <a \n                            style={{\n                                fontSize: '35px',\n                                fontFamily: 'Cookie, cursive',\n                                textShadow: '-1px -3px 5px black',\n                                padding: '0'\n                            }} \n                            className=\"navbar-brand\" \n                            href=\"#\"\n                        >\n                            Bangladesh Betar\n                        </a>\n                        <button   \n                            onClick={this.props.showNavbar}\n                            style={{\n                                borderRadius: \"50%\",\n                                height: '40px',\n                                width: '40px',\n                                boxShadow: '0 0 0px 1px #656060'\n                            }}\n                        >\n                             <span aria-hidden=\"true\">&gt;</span>\n                        </button>\n                    </nav>\n                    // :''\n                )\n            }</Consumer>\n        )\n    }\n}\n\nexport default Header","import React from 'react';\nimport { Consumer } from '../components/AppProvider';\n\nconst FlashMessage = () => <Consumer>\n  {({ state, ...context }) => state.message &&\n    <div style={{display: \"flex\",  \n      alignItems: \"center\",\n      justifyContent: \"center\",\n      paddingTop: \"30px\"\n    }}>\n      <div \n        className=\"alert alert-danger\" \n        role=\"alert\"\n      >\n        {state.message}\n        <button \n          type=\"button\" \n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={() => context.clearMessage()}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </div>}\n</Consumer>;\n\nexport default FlashMessage;","import React, {\n  Component,\n  Fragment\n} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\n\nimport AppProvider, {\n  Consumer\n} from './AppProvider';\nimport Login from './Login';\nimport Signup from './Signup';\nimport Dashboard from './Dashboard';\n\nimport Navbar from '../components/Navbar';\nimport Header from '../components/Header';\n\nimport FlashMessage from '../components/FlashMessage';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n\n    this.state ={visibleNavbar: false}\n  }\n\n  showNavbar = () => this.setState({visibleNavbar: true})\n  onCloseNavbar = () => this.setState({visibleNavbar: false})\n  \n\n  render() {\n    return (\n      <AppProvider>\n        <Router>\n          <Fragment>\n            <Header showNavbar={this.showNavbar}/>\n            <Navbar \n              onCloseNavbar={this.onCloseNavbar} \n              visibleNavbar={this.state.visibleNavbar}\n            />\n            <FlashMessage />\n            <Route exact path=\"/\" component={() => \n              <h1 className=\"content\">Welcome, Home!</h1>} />\n            <Route exact path=\"/login\" component={() => <Login />} />\n            <Route exact path=\"/signup\" component={() => <Signup />} />\n            <Route exact path=\"/dashboard\" component={() => <Consumer>\n              {\n                ({ state }) => state.currentUser?\n                  <Dashboard user={state.currentUser} /> \n                  :<div style={{display: \"flex\",  \n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    paddingTop: \"30px\"\n                  }}>\n                    <div \n                      className=\"alert alert-danger\" \n                      role=\"alert\"\n                    >\n                      <h1 className=\"alert-heading\">Access denied.</h1>\n                      <hr/>\n                      <p className=\"mb-0\">You are not authorized to access this page.</p>\n                    </div>\n                  </div>\n              }\n            </Consumer>} />\n            <Route exact path=\"/signedOut\" component={() => \n              <h1 className=\"content\">You're now signed out.</h1>} />\n            <Route exact path=\"/accountCreated\" component={() => \n              <h1 className=\"content\">Account created. <Link to=\"/login\">\n              Proceed to Dashboard</Link></h1>} />\n          </Fragment>\n        </Router>\n      </AppProvider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}